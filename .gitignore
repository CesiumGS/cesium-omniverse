# Build folders
/build*/

# Nvidia build folder
extern/nvidia/_build

# Ignore symlink to Omniverse Code
extern/nvidia/app

# Python cache
__pycache__

# generated by CMake and copied into root folder to aid code completion
compile_commands.json

# from clangd VSCode extension
.cache
.clangd

# from CTest
/Testing

# everyone has their own launch.json
.vscode/launch.json

# macOS folder attributes (autogenerated)
.DS_Store

# Tracer results
trace.json
trace.csv

# CI puts Conan in the project directory
.conan

# Clion Config
.idea

# Visual Studio Cache/Options
.vs

# Installed python bindings
exts/cesium.omniverse/cesium/omniverse/bindings/CesiumOmniversePythonBindings.cpython-37m-x86_64-linux-gnu.so
exts/cesium.omniverse/cesium/omniverse/bindings/CesiumOmniversePythonBindings.cp37-win_amd64.pyd
exts/cesium.usd.plugins/cesium/usd/plugins/CesiumUsdSchemas/_cesiumUsdSchemas.so
exts/cesium.usd.plugins/cesium/usd/plugins/CesiumUsdSchemas/_cesiumUsdSchemas.pyd
exts/cesium.usd.plugins/cesium/usd/plugins/CesiumUsdSchemas/_cesiumUsdSchemas.lib

# Installed libraries
exts/cesium.omniverse/bin/
exts/cesium.usd.plugins/bin/

# Installed plugins
exts/cesium.usd.plugins/plugins/

# Extension Docs
exts/cesium.omniverse/doc/CHANGES.md
exts/cesium.omniverse/doc/resources/*
!exts/cesium.omniverse/doc/resources/icon.png
!exts/cesium.omniverse/doc/resources/preview.jpg

# Test output
_testoutput

# Packman user files
*.user

# Tracing files
cesium-trace-*.json
