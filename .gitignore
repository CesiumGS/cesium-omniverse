# Build folders
/build*/

# Nvidia build folder
extern/nvidia/_build

# Ignore symlink to Omniverse Code
extern/nvidia/app

# Python cache
__pycache__

# generated by CMake and copied into root folder to aid code completion
compile_commands.json

# from clangd VSCode extension
.cache
.clangd

# from CTest
/Testing

# from coverage
/coverage

# everyone has their own launch.json
.vscode/launch.json

# macOS folder attributes (autogenerated)
.DS_Store

# Tracer results
trace.json
trace.csv

# CI puts Conan in the project directory
.conan

# Clion Config
.idea

# Visual Studio Cache/Options
.vs/*
!.vs/launch.vs.json

# Installed python bindings
exts/cesium.omniverse/cesium/omniverse/bindings/CesiumOmniversePythonBindings.cpython-310-x86_64-linux-gnu.so
exts/cesium.omniverse/cesium/omniverse/bindings/CesiumOmniversePythonBindings.cp310-win_amd64.pyd
exts/cesium.usd.plugins/cesium/usd/plugins/CesiumUsdSchemas/_CesiumUsdSchemas.so
exts/cesium.usd.plugins/cesium/usd/plugins/CesiumUsdSchemas/_CesiumUsdSchemas.pyd
exts/cesium.usd.plugins/cesium/usd/plugins/CesiumUsdSchemas/_CesiumUsdSchemas.lib
exts/cesium.omniverse.cpp.tests/cesium/omniverse/cpp/tests/bindings/CesiumOmniverseCppTestsPythonBindings.cpython-310-x86_64-linux-gnu.so
exts/cesium.omniverse.cpp.tests/cesium/omniverse/cpp/tests/bindings/CesiumOmniverseCppTestsPythonBindings.cp310-win_amd64.pyd

# Installed libraries
exts/cesium.omniverse/bin/
exts/cesium.usd.plugins/bin/
exts/cesium.omniverse.cpp.tests/bin/

# Installed plugins
exts/cesium.usd.plugins/plugins/

# Extension Docs
exts/cesium.omniverse/doc/CHANGES.md
exts/cesium.omniverse/doc/resources/*
!exts/cesium.omniverse/doc/resources/icon.png
!exts/cesium.omniverse/doc/resources/preview.jpg

# Extension Certs
exts/cesium.omniverse/certs/cacert.pem

# Test output
_testoutput

# Test utils header has components generated by CMake
tests/include/testUtils.h

# Packman user files
*.user

# Tracing files
cesium-trace-*.json

# Carb settings from Cesium Power Tools extensions
carb_settings.txt
