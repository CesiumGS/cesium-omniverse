#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (0, 0, 50000)
                double radius = 500
            }
            dictionary Perspective = {
                double3 position = (30260.07014056585, 7596.449229218398, 6634.329113353917)
                double3 target = (8030.727295164928, -31747.533194171596, -19278.021284467664)
            }
            dictionary Right = {
                double3 position = (-50000, 0, 0)
                double radius = 500
            }
            dictionary Top = {
                double3 position = (0, 50000, 0)
                double radius = 500
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "./CWTAndPolygonOverlay.usda"
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            float3 "rtx:fog:fogColor" = (0.75, 0.75, 0.75)
            float3 "rtx:index:regionOfInterestMax" = (0, 0, 0)
            float3 "rtx:index:regionOfInterestMin" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_ground_position" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_ground_reflectivity" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_rotation_axis" = (3.4028235e38, 3.4028235e38, 3.4028235e38)
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1, 1, 1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (1, 1, 1)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            float3 "rtx:post:lensFlares:cutoffPoint" = (2, 2, 2)
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            float3 "rtx:sceneDb:ambientLightColor" = (0.1, 0.1, 0.1)
        }
    }
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 0.01
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "World"
{
    def CesiumCartographicPolygonPrim "CartographicPolygonPrim" (
        prepend apiSchemas = ["CesiumGlobeAnchorSchemaAPI"]
    )
    {
        double3 cesium:anchor:geographicCoordinates = (39.73859764696646, -105.2569465912422, 1937.9000322080747)
        prepend rel cesium:anchor:georeferenceBinding = </CesiumGeoreference>
        double3 cesium:anchor:position = (-1292795.2695798452, -4739653.650334582, 4056948.2455588095)
        double3 cesium:anchor:rotation = (141.2702178955078, -9.68466854095459, 11.84640884399414)
        double3 cesium:anchor:scale = (0.009999999776482582, 0.009999999776482582, 0.009999999776482582)
        int[] curveVertexCounts = [12]
        float3[] extent = [(-3190.014, -631.60156, -5687.2783), (5000.384, -325.54883, 5246.4126)]
        point3f[] points = [(-3177.514, -425.78125, 5051.506), (-3177.514, -425.78125, 5051.506), (-2948.2864, -539.71875, -5674.7783), (-2948.2864, -539.71875, -5674.7783), (-2948.2864, -539.71875, -5674.7783), (4646.934, -619.10156, -5036.57), (4646.934, -619.10156, -5036.57), (4646.934, -619.10156, -5036.57), (4987.884, -338.04883, 5233.9126), (4987.884, -338.04883, 5233.9126), (4987.884, -338.04883, 5233.9126), (-3177.514, -425.78125, 5051.506)]
        uniform token type = "cubic"
        float[] widths = [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25]
        uniform token wrap = "periodic"
        float3 xformOp:rotateXYZ = (0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        matrix4d xformOp:transform:cesium = ( (1, -2.6441090375689335e-17, -3.4969745398502886e-17, 0), (-1.6926134047534234e-17, 1, 0, 0), (1.472833028835632e-17, -5.551115123125783e-17, 1, 0), (3630.50117, -31210.4463, -24396.75637, 1) )
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale", "xformOp:transform:cesium"]
    }

    def Mesh "Plane"
    {
        float3[] extent = [(-50, 0, -50), (50, 0, 50)]
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 2, 3, 1]
        normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-50, 0, -50), (50, 0, -50), (-50, 0, 50), (50, 0, 50)]
        texCoord2f[] primvars:st = [(0, 1), (0, 0), (1, 0), (1, 1)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        token visibility = "invisible"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (209.68050168516046, 209.68050168516046, 209.68050168516046)
        double3 xformOp:translate = (4877.603137313571, -33478.578125, -25790.26015476277)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def "BasisCurves" (
        prepend references = @../../Projects/Cesium/SampleFiles/TilesetClipping/BasisCurves.usda@
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        over "BasisCurves" (
            prepend apiSchemas = ["CesiumGlobeAnchorSchemaAPI"]
        )
        {
            double3 cesium:anchor:geographicCoordinates = (39.738597646966916, -105.2569465912424, 1937.9000321585154)
            prepend rel cesium:anchor:georeferenceBinding = </CesiumGeoreference>
            double3 cesium:anchor:position = (-1292795.2695798434, -4739653.650334509, 4056948.245558815)
            double3 cesium:anchor:rotation = (141.2706756591797, -9.68457317352295, 11.84648609161377)
            double3 cesium:anchor:scale = (0.009999999776482582, 0.009999999776482582, 0.009999999776482582)
            int[] curveVertexCounts = [12]
            float3[] extent = [(-3190.014, -631.60156, -5687.2783), (5000.384, -325.54883, 5246.4126)]
            point3f[] points = [(-3177.514, -425.78125, 5051.506), (-3177.514, -425.78125, 5051.506), (-2948.2864, -539.71875, -5674.7783), (-2948.2864, -539.71875, -5674.7783), (-2948.2864, -539.71875, -5674.7783), (4646.934, -619.10156, -5036.57), (4646.934, -619.10156, -5036.57), (4646.934, -619.10156, -5036.57), (4987.884, -338.04883, 5233.9126), (4987.884, -338.04883, 5233.9126), (4987.884, -338.04883, 5233.9126), (-3177.514, -425.78125, 5051.506)]
            uniform token type = "cubic"
            token visibility = "invisible"
            float[] widths = [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25]
            uniform token wrap = "periodic"
            float3 xformOp:rotateXYZ = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            matrix4d xformOp:transform:cesium = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (3630.5011683273187, -31210.44630497771, -24396.756374848832, 1) )
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale", "xformOp:transform:cesium"]
        }
    }

    def Scope "Looks"
    {
        def Material "CesiumMaterial" (
            customData = {
                dictionary ui = {
                    dictionary nodegraph = {
                        dictionary node = {
                            dictionary pos = {
                                double2 output = (119.22985076904297, 200.80943298339844)
                            }
                        }
                    }
                }
            }
        )
        {
            token outputs:mdl:displacement.connect = </World/Looks/CesiumMaterial/cesium_material.outputs:out>
            token outputs:mdl:surface.connect = </World/Looks/CesiumMaterial/cesium_material.outputs:out>
            token outputs:mdl:volume.connect = </World/Looks/CesiumMaterial/cesium_material.outputs:out>
            token outputs:surface
            token outputs:volume.connect = </World/Looks/CesiumMaterial/diffuse.outputs:out>
            uniform token ui:nodegraph:node:expansionState = "open"

            def Shader "cesium_material" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @cesium.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "cesium_material"
                float inputs:alpha_cutoff (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Alpha Cutoff"
                    doc = """Threshold to decide between fully transparent and fully opaque when alpha mode is 'mask'.

"""
                    hidden = false
                    renderType = "float"
                )
                int inputs:alpha_mode (
                    customData = {
                        int default = 0
                    }
                    displayName = "Alpha Mode"
                    doc = """Select how to interpret the alpha value.

"""
                    hidden = false
                    renderType = "gltf_alpha_mode"
                    sdrMetadata = {
                        string __SDR__enum_value = "opaque"
                        string options = "opaque:0|mask:1|blend:2"
                    }
                )
                float inputs:base_alpha (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Base Alpha"
                    doc = """Select between transparent (0.0) and opaque (1.0).

"""
                    hidden = false
                    renderType = "float"
                )
                color3f inputs:base_color_factor (
                    customData = {
                        float3 default = (1, 1, 1)
                    }
                    displayName = "Base Color Factor"
                    doc = """The base color of the material.

"""
                    hidden = false
                    renderType = "color"
                )
                color3f inputs:base_color_factor.connect = </World/Looks/CesiumMaterial/file_texture.outputs:color>
                color3f inputs:emissive_factor (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    displayName = "Emissive Factor"
                    doc = """The emissive color of the material.

"""
                    hidden = false
                    renderType = "color"
                )
                float inputs:metallic_factor (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Metallic Factor"
                    doc = """The metalness of the material. Select between dielectric (0.0) and metallic (1.0).

"""
                    hidden = false
                    renderType = "float"
                )
                float inputs:roughness_factor (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Roughness Factor"
                    doc = """The roughness of the material. Select between very glossy (0.0) and dull (1.0).

"""
                    hidden = false
                    renderType = "float"
                )
                token outputs:out (
                    renderType = "material"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-191.45168, 188.84059)
            }

            def Shader "cesium_lookup_world_texture_color" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @cesium.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "cesium_lookup_world_texture_color"
                float2 inputs:max_world (
                    customData = {
                        float2 default = (5000, 5000)
                    }
                    hidden = false
                    renderType = "float2"
                )
                float2 inputs:min_world (
                    customData = {
                        float2 default = (-5000, -5000)
                    }
                    hidden = false
                    renderType = "float2"
                )
                asset inputs:texture (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    hidden = false
                    renderType = "texture_2d"
                )
                int inputs:up_axis (
                    customData = {
                        int default = 0
                    }
                    hidden = false
                    renderType = "up_axis_mode"
                    sdrMetadata = {
                        string __SDR__enum_value = "Y"
                        string options = "Y:0|Z:1"
                    }
                )
                color3f outputs:out (
                    renderType = "color"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-425.44858, 168.714)
            }

            def NodeGraph "file_texture" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:texture", "inputs:mono_source", "inputs:brightness", "inputs:contrast", "inputs:invert", "inputs:texture_space", "inputs:rotation", "inputs:translation", "inputs:scaling", "inputs:clip", "outputs:tex", "outputs:color", "outputs:mono", "outputs:r", "outputs:g", "outputs:b"]
                float inputs:brightness (
                    customData = {
                        double default = 1
                        dictionary soft_range = {
                            double max = 1
                            double min = 0
                        }
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Brightness"
                    renderType = "float"
                )
                bool inputs:clip (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Placement"
                    displayName = "Clip"
                    renderType = "bool"
                )
                float inputs:contrast (
                    customData = {
                        double default = 1
                        dictionary soft_range = {
                            double max = 1
                            double min = 0
                        }
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Contrast"
                    renderType = "float"
                )
                bool inputs:invert (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Invert image"
                    renderType = "bool"
                )
                int inputs:mono_source (
                    customData = {
                        int default = 1
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Scalar mode"
                    renderType = "mono_mode"
                    sdrMetadata = {
                        string __SDR__enum_value = "mono_average"
                        string options = "mono_alpha:0|mono_average:1|mono_luminance:2|mono_maximum:3"
                    }
                )
                float inputs:rotation (
                    customData = {
                        double default = 0
                    }
                    displayGroup = "Placement"
                    displayName = "Rotation"
                    renderType = "float"
                )
                float2 inputs:scaling (
                    customData = {
                        double2 default = (1, 1)
                    }
                    displayGroup = "Placement"
                    displayName = "Tiling"
                    renderType = "float2"
                )
                asset inputs:texture = @../../Desktop/cesium.png@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Bitmap file"
                    renderType = "texture_2d"
                )
                int inputs:texture_space (
                    customData = {
                        int default = 0
                        dictionary range = {
                            int max = 3
                            int min = 0
                        }
                    }
                    displayGroup = "Placement"
                    displayName = "UV space index"
                    renderType = "int"
                )
                float2 inputs:translation (
                    customData = {
                        double2 default = (0, 0)
                    }
                    displayGroup = "Placement"
                    displayName = "Offset"
                    renderType = "float2"
                )
                float outputs:b (
                    renderType = "float"
                )
                float outputs:b.connect = </World/Looks/CesiumMaterial/file_texture/z.outputs:out>
                color3f outputs:color (
                    renderType = "color"
                )
                color3f outputs:color.connect = </World/Looks/CesiumMaterial/file_texture/construct_color.outputs:out>
                float outputs:g (
                    renderType = "float"
                )
                float outputs:g.connect = </World/Looks/CesiumMaterial/file_texture/y.outputs:out>
                float outputs:mono (
                    renderType = "float"
                )
                float outputs:mono.connect = </World/Looks/CesiumMaterial/file_texture/construct_float.outputs:out>
                float outputs:r (
                    renderType = "float"
                )
                float outputs:r.connect = </World/Looks/CesiumMaterial/file_texture/x.outputs:out>
                token outputs:tex (
                    renderType = "texture_return"
                )
                token outputs:tex.connect = </World/Looks/CesiumMaterial/file_texture/file_texture.outputs:out>
                custom token ui:description = "Allows texturing using image files of various file formats"
                uniform token ui:displayGroup = "Texturing, high level"
                uniform token ui:displayName = "Bitmap texture"
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform asset ui:nodegraph:node:icon = @core_definitions.file_texture.png@
                uniform float2 ui:nodegraph:node:pos = (-715.5983, 113.07955)
                custom int ui:order = 30

                def Shader "file_texture"
                {
                    reorder properties = ["inputs:texture", "inputs:mono_source", "inputs:brightness", "inputs:contrast", "inputs:invert", "inputs:texture_space", "inputs:rotation", "inputs:translation", "inputs:scaling", "inputs:clip"]
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/core_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "file_texture(texture_2d,::base::mono_mode,float,float,float2,float2,float,bool,int,bool)"
                    float inputs:brightness (
                        customData = {
                            double default = 1
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Brightness"
                        renderType = "float"
                    )
                    float inputs:brightness.connect = </World/Looks/CesiumMaterial/file_texture.inputs:brightness>
                    bool inputs:clip (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Placement"
                        displayName = "Clip"
                        doc = "If set to true, texture will not repeat. Outside of the texture, color will be black and the scalar value will be 0"
                        renderType = "bool"
                    )
                    bool inputs:clip.connect = </World/Looks/CesiumMaterial/file_texture.inputs:clip>
                    float inputs:contrast (
                        customData = {
                            double default = 1
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Contrast"
                        renderType = "float"
                    )
                    float inputs:contrast.connect = </World/Looks/CesiumMaterial/file_texture.inputs:contrast>
                    bool inputs:invert (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Invert image"
                        doc = "Invert image"
                        renderType = "bool"
                    )
                    bool inputs:invert.connect = </World/Looks/CesiumMaterial/file_texture.inputs:invert>
                    int inputs:mono_source (
                        customData = {
                            int default = 1
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Scalar mode"
                        doc = "Defines how the texture applies to scalar parameters"
                        renderType = "mono_mode"
                        sdrMetadata = {
                            string __SDR__enum_value = "mono_average"
                            string options = "mono_alpha:0|mono_average:1|mono_luminance:2|mono_maximum:3"
                        }
                    )
                    int inputs:mono_source.connect = </World/Looks/CesiumMaterial/file_texture.inputs:mono_source>
                    float inputs:rotation (
                        customData = {
                            double default = 0
                        }
                        displayGroup = "Placement"
                        displayName = "Rotation"
                        doc = "Rotation angle of the texture in degrees"
                        renderType = "float"
                    )
                    float inputs:rotation.connect = </World/Looks/CesiumMaterial/file_texture.inputs:rotation>
                    float2 inputs:scaling (
                        customData = {
                            double2 default = (1, 1)
                        }
                        displayGroup = "Placement"
                        displayName = "Tiling"
                        doc = "Controls the scale of the texture on the object"
                        renderType = "float2"
                    )
                    float2 inputs:scaling.connect = </World/Looks/CesiumMaterial/file_texture.inputs:scaling>
                    asset inputs:texture (
                        colorSpace = "sRGB"
                        customData = {
                            asset default = @@
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Bitmap file"
                        renderType = "texture_2d"
                    )
                    asset inputs:texture.connect = </World/Looks/CesiumMaterial/file_texture.inputs:texture>
                    int inputs:texture_space (
                        customData = {
                            int default = 0
                            dictionary range = {
                                int max = 3
                                int min = 0
                            }
                        }
                        displayGroup = "Placement"
                        displayName = "UV space index"
                        doc = "Selects a specific UV space"
                        renderType = "int"
                    )
                    int inputs:texture_space.connect = </World/Looks/CesiumMaterial/file_texture.inputs:texture_space>
                    float2 inputs:translation (
                        customData = {
                            double2 default = (0, 0)
                        }
                        displayGroup = "Placement"
                        displayName = "Offset"
                        doc = "Controls position of the texture on the object"
                        renderType = "float2"
                    )
                    float2 inputs:translation.connect = </World/Looks/CesiumMaterial/file_texture.inputs:translation>
                    token outputs:out (
                        renderType = "texture_return"
                    )
                }

                def Shader "construct_float"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "construct_float(::base::texture_return)"
                    token inputs:a (
                        renderType = "texture_return"
                    )
                    token inputs:a.connect = </World/Looks/CesiumMaterial/file_texture/file_texture.outputs:out>
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "construct_color"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "construct_color(::base::texture_return)"
                    token inputs:a (
                        renderType = "texture_return"
                    )
                    token inputs:a.connect = </World/Looks/CesiumMaterial/file_texture/file_texture.outputs:out>
                    color3f outputs:out (
                        renderType = "color"
                    )
                }

                def Shader "x"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "x(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/CesiumMaterial/file_texture/construct_color.outputs:out>
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "y"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "y(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/CesiumMaterial/file_texture/construct_color.outputs:out>
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "z"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "z(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/CesiumMaterial/file_texture/construct_color.outputs:out>
                    float outputs:out (
                        renderType = "float"
                    )
                }
            }
        }
    }

    def Mesh "CartographicReferencePrim" (
        prepend apiSchemas = ["CesiumGlobeAnchorSchemaAPI"]
    )
    {
        double3 cesium:anchor:geographicCoordinates = (39.73813676162441, -105.2564334184915, 1932.4198245170371)
        prepend rel cesium:anchor:georeferenceBinding = </CesiumGeoreference>
        double3 cesium:anchor:position = (-1292760.3204507194, -4739692.733568812, 4056905.38043088)
        double3 cesium:anchor:rotation = (141.27064514160156, -9.684581756591797, 11.846479415893555)
        double3 cesium:anchor:scale = (0.009999999776482582, 0.009999999776482582, 0.009999999776482582)
        float3[] extent = [(-50, -50, -50), (50, 49.9995, 50)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 64, 65, 1, 1, 65, 66, 2, 2, 66, 67, 3, 3, 67, 68, 4, 4, 68, 69, 5, 5, 69, 70, 6, 6, 70, 71, 7, 7, 71, 72, 8, 8, 72, 73, 9, 9, 73, 74, 10, 10, 74, 75, 11, 11, 75, 76, 12, 12, 76, 77, 13, 13, 77, 78, 14, 14, 78, 79, 15, 15, 79, 80, 16, 16, 80, 81, 17, 17, 81, 82, 18, 18, 82, 83, 19, 19, 83, 84, 20, 20, 84, 85, 21, 21, 85, 86, 22, 22, 86, 87, 23, 23, 87, 88, 24, 24, 88, 89, 25, 25, 89, 90, 26, 26, 90, 91, 27, 27, 91, 92, 28, 28, 92, 93, 29, 29, 93, 94, 30, 30, 94, 95, 31, 31, 95, 96, 32, 32, 96, 97, 33, 33, 97, 98, 34, 34, 98, 99, 35, 35, 99, 100, 36, 36, 100, 101, 37, 37, 101, 102, 38, 38, 102, 103, 39, 39, 103, 104, 40, 40, 104, 105, 41, 41, 105, 106, 42, 42, 106, 107, 43, 43, 107, 108, 44, 44, 108, 109, 45, 45, 109, 110, 46, 46, 110, 111, 47, 47, 111, 112, 48, 48, 112, 113, 49, 49, 113, 114, 50, 50, 114, 115, 51, 51, 115, 116, 52, 52, 116, 117, 53, 53, 117, 118, 54, 54, 118, 119, 55, 55, 119, 120, 56, 56, 120, 121, 57, 57, 121, 122, 58, 58, 122, 123, 59, 59, 123, 124, 60, 60, 124, 125, 61, 61, 125, 126, 62, 62, 126, 127, 63, 63, 127, 64, 0, 64, 128, 129, 65, 65, 129, 130, 66, 66, 130, 131, 67, 67, 131, 132, 68, 68, 132, 133, 69, 69, 133, 134, 70, 70, 134, 135, 71, 71, 135, 136, 72, 72, 136, 137, 73, 73, 137, 138, 74, 74, 138, 139, 75, 75, 139, 140, 76, 76, 140, 141, 77, 77, 141, 142, 78, 78, 142, 143, 79, 79, 143, 144, 80, 80, 144, 145, 81, 81, 145, 146, 82, 82, 146, 147, 83, 83, 147, 148, 84, 84, 148, 149, 85, 85, 149, 150, 86, 86, 150, 151, 87, 87, 151, 152, 88, 88, 152, 153, 89, 89, 153, 154, 90, 90, 154, 155, 91, 91, 155, 156, 92, 92, 156, 157, 93, 93, 157, 158, 94, 94, 158, 159, 95, 95, 159, 160, 96, 96, 160, 161, 97, 97, 161, 162, 98, 98, 162, 163, 99, 99, 163, 164, 100, 100, 164, 165, 101, 101, 165, 166, 102, 102, 166, 167, 103, 103, 167, 168, 104, 104, 168, 169, 105, 105, 169, 170, 106, 106, 170, 171, 107, 107, 171, 172, 108, 108, 172, 173, 109, 109, 173, 174, 110, 110, 174, 175, 111, 111, 175, 176, 112, 112, 176, 177, 113, 113, 177, 178, 114, 114, 178, 179, 115, 115, 179, 180, 116, 116, 180, 181, 117, 117, 181, 182, 118, 118, 182, 183, 119, 119, 183, 184, 120, 120, 184, 185, 121, 121, 185, 186, 122, 122, 186, 187, 123, 123, 187, 188, 124, 124, 188, 189, 125, 125, 189, 190, 126, 126, 190, 191, 127, 127, 191, 128, 64, 128, 192, 193, 129, 129, 193, 194, 130, 130, 194, 195, 131, 131, 195, 196, 132, 132, 196, 197, 133, 133, 197, 198, 134, 134, 198, 199, 135, 135, 199, 200, 136, 136, 200, 201, 137, 137, 201, 202, 138, 138, 202, 203, 139, 139, 203, 204, 140, 140, 204, 205, 141, 141, 205, 206, 142, 142, 206, 207, 143, 143, 207, 208, 144, 144, 208, 209, 145, 145, 209, 210, 146, 146, 210, 211, 147, 147, 211, 212, 148, 148, 212, 213, 149, 149, 213, 214, 150, 150, 214, 215, 151, 151, 215, 216, 152, 152, 216, 217, 153, 153, 217, 218, 154, 154, 218, 219, 155, 155, 219, 220, 156, 156, 220, 221, 157, 157, 221, 222, 158, 158, 222, 223, 159, 159, 223, 224, 160, 160, 224, 225, 161, 161, 225, 226, 162, 162, 226, 227, 163, 163, 227, 228, 164, 164, 228, 229, 165, 165, 229, 230, 166, 166, 230, 231, 167, 167, 231, 232, 168, 168, 232, 233, 169, 169, 233, 234, 170, 170, 234, 235, 171, 171, 235, 236, 172, 172, 236, 237, 173, 173, 237, 238, 174, 174, 238, 239, 175, 175, 239, 240, 176, 176, 240, 241, 177, 177, 241, 242, 178, 178, 242, 243, 179, 179, 243, 244, 180, 180, 244, 245, 181, 181, 245, 246, 182, 182, 246, 247, 183, 183, 247, 248, 184, 184, 248, 249, 185, 185, 249, 250, 186, 186, 250, 251, 187, 187, 251, 252, 188, 188, 252, 253, 189, 189, 253, 254, 190, 190, 254, 255, 191, 191, 255, 192, 128, 192, 256, 193, 193, 256, 194, 194, 256, 195, 195, 256, 196, 196, 256, 197, 197, 256, 198, 198, 256, 199, 199, 256, 200, 200, 256, 201, 201, 256, 202, 202, 256, 203, 203, 256, 204, 204, 256, 205, 205, 256, 206, 206, 256, 207, 207, 256, 208, 208, 256, 209, 209, 256, 210, 210, 256, 211, 211, 256, 212, 212, 256, 213, 213, 256, 214, 214, 256, 215, 215, 256, 216, 216, 256, 217, 217, 256, 218, 218, 256, 219, 219, 256, 220, 220, 256, 221, 221, 256, 222, 222, 256, 223, 223, 256, 224, 224, 256, 225, 225, 256, 226, 226, 256, 227, 227, 256, 228, 228, 256, 229, 229, 256, 230, 230, 256, 231, 231, 256, 232, 232, 256, 233, 233, 256, 234, 234, 256, 235, 235, 256, 236, 236, 256, 237, 237, 256, 238, 238, 256, 239, 239, 256, 240, 240, 256, 241, 241, 256, 242, 242, 256, 243, 243, 256, 244, 244, 256, 245, 245, 256, 246, 246, 256, 247, 247, 256, 248, 248, 256, 249, 249, 256, 250, 250, 256, 251, 251, 256, 252, 252, 256, 253, 253, 256, 254, 254, 256, 255, 255, 256, 192, 0, 1, 257, 1, 2, 257, 2, 3, 257, 3, 4, 257, 4, 5, 257, 5, 6, 257, 6, 7, 257, 7, 8, 257, 8, 9, 257, 9, 10, 257, 10, 11, 257, 11, 12, 257, 12, 13, 257, 13, 14, 257, 14, 15, 257, 15, 16, 257, 16, 17, 257, 17, 18, 257, 18, 19, 257, 19, 20, 257, 20, 21, 257, 21, 22, 257, 22, 23, 257, 23, 24, 257, 24, 25, 257, 25, 26, 257, 26, 27, 257, 27, 28, 257, 28, 29, 257, 29, 30, 257, 30, 31, 257, 31, 32, 257, 32, 33, 257, 33, 34, 257, 34, 35, 257, 35, 36, 257, 36, 37, 257, 37, 38, 257, 38, 39, 257, 39, 40, 257, 40, 41, 257, 41, 42, 257, 42, 43, 257, 43, 44, 257, 44, 45, 257, 45, 46, 257, 46, 47, 257, 47, 48, 257, 48, 49, 257, 49, 50, 257, 50, 51, 257, 51, 52, 257, 52, 53, 257, 53, 54, 257, 54, 55, 257, 55, 56, 257, 56, 57, 257, 57, 58, 257, 58, 59, 257, 59, 60, 257, 60, 61, 257, 61, 62, 257, 62, 63, 257, 63, 0, 257]
        normal3f[] normals = [(0.8944272, 0.4472136, 0), (0.8944271, 0.44721356, 0), (0.8901202, 0.44721356, 0.08766919), (0.89012027, 0.4472136, 0.087669194), (0.89012027, 0.4472136, 0.087669194), (0.8901202, 0.44721356, 0.08766919), (0.87724096, 0.44721356, 0.17449406), (0.8772411, 0.44721362, 0.1744941), (0.8772411, 0.44721362, 0.1744941), (0.87724096, 0.44721356, 0.17449406), (0.85591346, 0.44721362, 0.25963852), (0.85591346, 0.4472136, 0.25963852), (0.85591346, 0.4472136, 0.25963852), (0.85591346, 0.44721362, 0.25963852), (0.826343, 0.44721362, 0.34228247), (0.826343, 0.44721362, 0.34228247), (0.826343, 0.44721362, 0.34228247), (0.826343, 0.44721362, 0.34228247), (0.78881437, 0.44721362, 0.42163005), (0.78881437, 0.44721362, 0.42163005), (0.78881437, 0.44721362, 0.42163005), (0.78881437, 0.44721362, 0.42163005), (0.743689, 0.44721362, 0.4969171), (0.743689, 0.4472136, 0.49691713), (0.743689, 0.4472136, 0.49691713), (0.743689, 0.44721362, 0.4969171), (0.6914016, 0.44721362, 0.5674186), (0.6914016, 0.4472136, 0.56741863), (0.6914016, 0.4472136, 0.56741863), (0.6914016, 0.44721362, 0.5674186), (0.6324555, 0.44721356, 0.6324555), (0.6324555, 0.44721362, 0.6324555), (0.6324555, 0.44721362, 0.6324555), (0.6324555, 0.44721356, 0.6324555), (0.5674186, 0.44721362, 0.6914016), (0.56741863, 0.4472136, 0.6914016), (0.56741863, 0.4472136, 0.6914016), (0.5674186, 0.44721362, 0.6914016), (0.4969171, 0.44721362, 0.743689), (0.49691713, 0.4472136, 0.743689), (0.49691713, 0.4472136, 0.743689), (0.4969171, 0.44721362, 0.743689), (0.42163005, 0.44721362, 0.78881437), (0.42163005, 0.44721362, 0.78881437), (0.42163005, 0.44721362, 0.78881437), (0.42163005, 0.44721362, 0.78881437), (0.34228247, 0.44721362, 0.826343), (0.34228247, 0.44721362, 0.826343), (0.34228247, 0.44721362, 0.826343), (0.34228247, 0.44721362, 0.826343), (0.25963852, 0.44721362, 0.85591346), (0.25963852, 0.4472136, 0.85591346), (0.25963852, 0.4472136, 0.85591346), (0.25963852, 0.44721362, 0.85591346), (0.17449409, 0.44721362, 0.8772411), (0.17449409, 0.4472136, 0.877241), (0.17449409, 0.4472136, 0.877241), (0.17449409, 0.44721362, 0.8772411), (0.08766919, 0.44721356, 0.8901202), (0.0876692, 0.44721362, 0.8901203), (0.0876692, 0.44721362, 0.8901203), (0.08766919, 0.44721356, 0.8901202), (5.4767863e-17, 0.44721356, 0.8944271), (5.4767867e-17, 0.4472136, 0.8944272), (5.4767867e-17, 0.4472136, 0.8944272), (5.4767863e-17, 0.44721356, 0.8944271), (-0.08766919, 0.44721356, 0.8901202), (-0.0876692, 0.44721362, 0.8901203), (-0.0876692, 0.44721362, 0.8901203), (-0.08766919, 0.44721356, 0.8901202), (-0.17449409, 0.44721362, 0.8772411), (-0.17449409, 0.4472136, 0.877241), (-0.17449409, 0.4472136, 0.877241), (-0.17449409, 0.44721362, 0.8772411), (-0.25963852, 0.44721362, 0.85591346), (-0.25963852, 0.4472136, 0.85591346), (-0.25963852, 0.4472136, 0.85591346), (-0.25963852, 0.44721362, 0.85591346), (-0.34228247, 0.44721362, 0.826343), (-0.34228247, 0.44721362, 0.826343), (-0.34228247, 0.44721362, 0.826343), (-0.34228247, 0.44721362, 0.826343), (-0.42163005, 0.44721362, 0.78881437), (-0.42163005, 0.44721362, 0.78881437), (-0.42163005, 0.44721362, 0.78881437), (-0.42163005, 0.44721362, 0.78881437), (-0.4969171, 0.44721362, 0.743689), (-0.49691713, 0.4472136, 0.743689), (-0.49691713, 0.4472136, 0.743689), (-0.4969171, 0.44721362, 0.743689), (-0.5674186, 0.44721362, 0.6914016), (-0.56741863, 0.4472136, 0.6914016), (-0.56741863, 0.4472136, 0.6914016), (-0.5674186, 0.44721362, 0.6914016), (-0.6324555, 0.44721356, 0.6324555), (-0.6324555, 0.44721362, 0.6324555), (-0.6324555, 0.44721362, 0.6324555), (-0.6324555, 0.44721356, 0.6324555), (-0.6914016, 0.44721362, 0.5674186), (-0.6914016, 0.4472136, 0.56741863), (-0.6914016, 0.4472136, 0.56741863), (-0.6914016, 0.44721362, 0.5674186), (-0.743689, 0.44721362, 0.4969171), (-0.743689, 0.4472136, 0.49691713), (-0.743689, 0.4472136, 0.49691713), (-0.743689, 0.44721362, 0.4969171), (-0.78881437, 0.44721362, 0.42163005), (-0.78881437, 0.44721362, 0.42163005), (-0.78881437, 0.44721362, 0.42163005), (-0.78881437, 0.44721362, 0.42163005), (-0.826343, 0.44721362, 0.34228247), (-0.826343, 0.44721362, 0.34228247), (-0.826343, 0.44721362, 0.34228247), (-0.826343, 0.44721362, 0.34228247), (-0.85591346, 0.44721362, 0.25963852), (-0.85591346, 0.4472136, 0.25963852), (-0.85591346, 0.4472136, 0.25963852), (-0.85591346, 0.44721362, 0.25963852), (-0.87724096, 0.44721356, 0.17449406), (-0.8772411, 0.44721362, 0.1744941), (-0.8772411, 0.44721362, 0.1744941), (-0.87724096, 0.44721356, 0.17449406), (-0.8901202, 0.44721356, 0.08766919), (-0.89012027, 0.4472136, 0.087669194), (-0.89012027, 0.4472136, 0.087669194), (-0.8901202, 0.44721356, 0.08766919), (-0.8944271, 0.44721356, 1.09535727e-16), (-0.8944272, 0.4472136, 1.0953573e-16), (-0.8944272, 0.4472136, 1.0953573e-16), (-0.8944271, 0.44721356, 1.09535727e-16), (-0.8901202, 0.44721356, -0.08766919), (-0.89012027, 0.4472136, -0.087669194), (-0.89012027, 0.4472136, -0.087669194), (-0.8901202, 0.44721356, -0.08766919), (-0.87724096, 0.44721356, -0.17449406), (-0.8772411, 0.44721362, -0.1744941), (-0.8772411, 0.44721362, -0.1744941), (-0.87724096, 0.44721356, -0.17449406), (-0.85591346, 0.44721362, -0.25963852), (-0.85591346, 0.4472136, -0.25963852), (-0.85591346, 0.4472136, -0.25963852), (-0.85591346, 0.44721362, -0.25963852), (-0.826343, 0.44721362, -0.34228247), (-0.826343, 0.44721362, -0.34228247), (-0.826343, 0.44721362, -0.34228247), (-0.826343, 0.44721362, -0.34228247), (-0.78881437, 0.44721362, -0.42163005), (-0.78881437, 0.44721362, -0.42163005), (-0.78881437, 0.44721362, -0.42163005), (-0.78881437, 0.44721362, -0.42163005), (-0.743689, 0.44721362, -0.4969171), (-0.743689, 0.4472136, -0.49691713), (-0.743689, 0.4472136, -0.49691713), (-0.743689, 0.44721362, -0.4969171), (-0.6914016, 0.44721362, -0.5674186), (-0.6914016, 0.4472136, -0.56741863), (-0.6914016, 0.4472136, -0.56741863), (-0.6914016, 0.44721362, -0.5674186), (-0.6324555, 0.44721356, -0.6324555), (-0.6324555, 0.44721362, -0.6324555), (-0.6324555, 0.44721362, -0.6324555), (-0.6324555, 0.44721356, -0.6324555), (-0.5674186, 0.44721362, -0.6914016), (-0.56741863, 0.4472136, -0.6914016), (-0.56741863, 0.4472136, -0.6914016), (-0.5674186, 0.44721362, -0.6914016), (-0.4969171, 0.44721362, -0.743689), (-0.49691713, 0.4472136, -0.743689), (-0.49691713, 0.4472136, -0.743689), (-0.4969171, 0.44721362, -0.743689), (-0.42163005, 0.44721362, -0.78881437), (-0.42163005, 0.44721362, -0.78881437), (-0.42163005, 0.44721362, -0.78881437), (-0.42163005, 0.44721362, -0.78881437), (-0.34228247, 0.44721362, -0.826343), (-0.34228247, 0.44721362, -0.826343), (-0.34228247, 0.44721362, -0.826343), (-0.34228247, 0.44721362, -0.826343), (-0.25963852, 0.44721362, -0.85591346), (-0.25963852, 0.4472136, -0.85591346), (-0.25963852, 0.4472136, -0.85591346), (-0.25963852, 0.44721362, -0.85591346), (-0.17449409, 0.44721362, -0.8772411), (-0.17449409, 0.4472136, -0.877241), (-0.17449409, 0.4472136, -0.877241), (-0.17449409, 0.44721362, -0.8772411), (-0.08766919, 0.44721356, -0.8901202), (-0.0876692, 0.44721362, -0.8901203), (-0.0876692, 0.44721362, -0.8901203), (-0.08766919, 0.44721356, -0.8901202), (-1.6430359e-16, 0.44721356, -0.8944271), (-1.6430361e-16, 0.4472136, -0.8944272), (-1.6430361e-16, 0.4472136, -0.8944272), (-1.6430359e-16, 0.44721356, -0.8944271), (0.08766919, 0.44721356, -0.8901202), (0.0876692, 0.44721362, -0.8901203), (0.0876692, 0.44721362, -0.8901203), (0.08766919, 0.44721356, -0.8901202), (0.17449409, 0.44721362, -0.8772411), (0.17449409, 0.4472136, -0.877241), (0.17449409, 0.4472136, -0.877241), (0.17449409, 0.44721362, -0.8772411), (0.25963852, 0.44721362, -0.85591346), (0.25963852, 0.4472136, -0.85591346), (0.25963852, 0.4472136, -0.85591346), (0.25963852, 0.44721362, -0.85591346), (0.34228247, 0.44721362, -0.826343), (0.34228247, 0.44721362, -0.826343), (0.34228247, 0.44721362, -0.826343), (0.34228247, 0.44721362, -0.826343), (0.42163005, 0.44721362, -0.78881437), (0.42163005, 0.44721362, -0.78881437), (0.42163005, 0.44721362, -0.78881437), (0.42163005, 0.44721362, -0.78881437), (0.4969171, 0.44721362, -0.743689), (0.49691713, 0.4472136, -0.743689), (0.49691713, 0.4472136, -0.743689), (0.4969171, 0.44721362, -0.743689), (0.5674186, 0.44721362, -0.6914016), (0.56741863, 0.4472136, -0.6914016), (0.56741863, 0.4472136, -0.6914016), (0.5674186, 0.44721362, -0.6914016), (0.6324555, 0.44721356, -0.6324555), (0.6324555, 0.44721362, -0.6324555), (0.6324555, 0.44721362, -0.6324555), (0.6324555, 0.44721356, -0.6324555), (0.6914016, 0.44721362, -0.5674186), (0.6914016, 0.4472136, -0.56741863), (0.6914016, 0.4472136, -0.56741863), (0.6914016, 0.44721362, -0.5674186), (0.743689, 0.44721362, -0.4969171), (0.743689, 0.4472136, -0.49691713), (0.743689, 0.4472136, -0.49691713), (0.743689, 0.44721362, -0.4969171), (0.78881437, 0.44721362, -0.42163005), (0.78881437, 0.44721362, -0.42163005), (0.78881437, 0.44721362, -0.42163005), (0.78881437, 0.44721362, -0.42163005), (0.826343, 0.44721362, -0.34228247), (0.826343, 0.44721362, -0.34228247), (0.826343, 0.44721362, -0.34228247), (0.826343, 0.44721362, -0.34228247), (0.85591346, 0.44721362, -0.25963852), (0.85591346, 0.4472136, -0.25963852), (0.85591346, 0.4472136, -0.25963852), (0.85591346, 0.44721362, -0.25963852), (0.87724096, 0.44721356, -0.17449406), (0.8772411, 0.44721362, -0.1744941), (0.8772411, 0.44721362, -0.1744941), (0.87724096, 0.44721356, -0.17449406), (0.8901202, 0.44721356, -0.08766919), (0.89012027, 0.4472136, -0.087669194), (0.89012027, 0.4472136, -0.087669194), (0.8901202, 0.44721356, -0.08766919), (0.8944271, 0.44721356, 0), (0.8944272, 0.4472136, 0), (0.8944271, 0.44721356, 0), (0.8944272, 0.4472136, 0), (0.89012027, 0.4472136, 0.08766919), (0.8901202, 0.44721356, 0.08766919), (0.8901202, 0.44721356, 0.08766919), (0.89012027, 0.4472136, 0.08766919), (0.8772411, 0.4472136, 0.17449409), (0.87724096, 0.44721356, 0.17449406), (0.87724096, 0.44721356, 0.17449406), (0.8772411, 0.4472136, 0.17449409), (0.85591346, 0.4472136, 0.25963852), (0.85591346, 0.44721362, 0.25963852), (0.85591346, 0.44721362, 0.25963852), (0.85591346, 0.4472136, 0.25963852), (0.826343, 0.4472136, 0.34228247), (0.826343, 0.44721362, 0.34228247), (0.826343, 0.44721362, 0.34228247), (0.826343, 0.4472136, 0.34228247), (0.78881437, 0.44721365, 0.42163008), (0.78881437, 0.44721362, 0.42163005), (0.78881437, 0.44721362, 0.42163005), (0.78881437, 0.44721365, 0.42163008), (0.74368906, 0.4472136, 0.49691716), (0.743689, 0.44721362, 0.4969171), (0.743689, 0.44721362, 0.4969171), (0.74368906, 0.4472136, 0.49691716), (0.6914016, 0.4472136, 0.5674186), (0.6914016, 0.44721362, 0.5674186), (0.6914016, 0.44721362, 0.5674186), (0.6914016, 0.4472136, 0.5674186), (0.6324555, 0.4472136, 0.6324555), (0.6324555, 0.44721356, 0.6324555), (0.6324555, 0.44721356, 0.6324555), (0.6324555, 0.4472136, 0.6324555), (0.5674186, 0.4472136, 0.6914016), (0.5674186, 0.44721362, 0.6914016), (0.5674186, 0.44721362, 0.6914016), (0.5674186, 0.4472136, 0.6914016), (0.49691716, 0.4472136, 0.74368906), (0.4969171, 0.44721362, 0.743689), (0.4969171, 0.44721362, 0.743689), (0.49691716, 0.4472136, 0.74368906), (0.42163008, 0.44721365, 0.78881437), (0.42163005, 0.44721362, 0.78881437), (0.42163005, 0.44721362, 0.78881437), (0.42163008, 0.44721365, 0.78881437), (0.34228247, 0.4472136, 0.826343), (0.34228247, 0.44721362, 0.826343), (0.34228247, 0.44721362, 0.826343), (0.34228247, 0.4472136, 0.826343), (0.25963852, 0.4472136, 0.85591346), (0.25963852, 0.44721362, 0.85591346), (0.25963852, 0.44721362, 0.85591346), (0.25963852, 0.4472136, 0.85591346), (0.17449409, 0.4472136, 0.8772411), (0.17449409, 0.44721362, 0.8772411), (0.17449409, 0.44721362, 0.8772411), (0.17449409, 0.4472136, 0.8772411), (0.08766919, 0.4472136, 0.89012027), (0.08766919, 0.44721356, 0.8901202), (0.08766919, 0.44721356, 0.8901202), (0.08766919, 0.4472136, 0.89012027), (5.476787e-17, 0.4472136, 0.8944272), (5.4767863e-17, 0.44721356, 0.8944271), (5.4767863e-17, 0.44721356, 0.8944271), (5.476787e-17, 0.4472136, 0.8944272), (-0.08766919, 0.4472136, 0.89012027), (-0.08766919, 0.44721356, 0.8901202), (-0.08766919, 0.44721356, 0.8901202), (-0.08766919, 0.4472136, 0.89012027), (-0.17449409, 0.4472136, 0.8772411), (-0.17449409, 0.44721362, 0.8772411), (-0.17449409, 0.44721362, 0.8772411), (-0.17449409, 0.4472136, 0.8772411), (-0.25963852, 0.4472136, 0.85591346), (-0.25963852, 0.44721362, 0.85591346), (-0.25963852, 0.44721362, 0.85591346), (-0.25963852, 0.4472136, 0.85591346), (-0.34228247, 0.4472136, 0.826343), (-0.34228247, 0.44721362, 0.826343), (-0.34228247, 0.44721362, 0.826343), (-0.34228247, 0.4472136, 0.826343), (-0.42163008, 0.44721365, 0.78881437), (-0.42163005, 0.44721362, 0.78881437), (-0.42163005, 0.44721362, 0.78881437), (-0.42163008, 0.44721365, 0.78881437), (-0.49691716, 0.4472136, 0.74368906), (-0.4969171, 0.44721362, 0.743689), (-0.4969171, 0.44721362, 0.743689), (-0.49691716, 0.4472136, 0.74368906), (-0.5674186, 0.4472136, 0.6914016), (-0.5674186, 0.44721362, 0.6914016), (-0.5674186, 0.44721362, 0.6914016), (-0.5674186, 0.4472136, 0.6914016), (-0.6324555, 0.4472136, 0.6324555), (-0.6324555, 0.44721356, 0.6324555), (-0.6324555, 0.44721356, 0.6324555), (-0.6324555, 0.4472136, 0.6324555), (-0.6914016, 0.4472136, 0.5674186), (-0.6914016, 0.44721362, 0.5674186), (-0.6914016, 0.44721362, 0.5674186), (-0.6914016, 0.4472136, 0.5674186), (-0.74368906, 0.4472136, 0.49691716), (-0.743689, 0.44721362, 0.4969171), (-0.743689, 0.44721362, 0.4969171), (-0.74368906, 0.4472136, 0.49691716), (-0.78881437, 0.44721365, 0.42163008), (-0.78881437, 0.44721362, 0.42163005), (-0.78881437, 0.44721362, 0.42163005), (-0.78881437, 0.44721365, 0.42163008), (-0.826343, 0.4472136, 0.34228247), (-0.826343, 0.44721362, 0.34228247), (-0.826343, 0.44721362, 0.34228247), (-0.826343, 0.4472136, 0.34228247), (-0.85591346, 0.4472136, 0.25963852), (-0.85591346, 0.44721362, 0.25963852), (-0.85591346, 0.44721362, 0.25963852), (-0.85591346, 0.4472136, 0.25963852), (-0.8772411, 0.4472136, 0.17449409), (-0.87724096, 0.44721356, 0.17449406), (-0.87724096, 0.44721356, 0.17449406), (-0.8772411, 0.4472136, 0.17449409), (-0.89012027, 0.4472136, 0.08766919), (-0.8901202, 0.44721356, 0.08766919), (-0.8901202, 0.44721356, 0.08766919), (-0.89012027, 0.4472136, 0.08766919), (-0.8944272, 0.4472136, 1.0953574e-16), (-0.8944271, 0.44721356, 1.09535727e-16), (-0.8944271, 0.44721356, 1.09535727e-16), (-0.8944272, 0.4472136, 1.0953574e-16), (-0.89012027, 0.4472136, -0.08766919), (-0.8901202, 0.44721356, -0.08766919), (-0.8901202, 0.44721356, -0.08766919), (-0.89012027, 0.4472136, -0.08766919), (-0.8772411, 0.4472136, -0.17449409), (-0.87724096, 0.44721356, -0.17449406), (-0.87724096, 0.44721356, -0.17449406), (-0.8772411, 0.4472136, -0.17449409), (-0.85591346, 0.4472136, -0.25963852), (-0.85591346, 0.44721362, -0.25963852), (-0.85591346, 0.44721362, -0.25963852), (-0.85591346, 0.4472136, -0.25963852), (-0.826343, 0.4472136, -0.34228247), (-0.826343, 0.44721362, -0.34228247), (-0.826343, 0.44721362, -0.34228247), (-0.826343, 0.4472136, -0.34228247), (-0.78881437, 0.44721365, -0.42163008), (-0.78881437, 0.44721362, -0.42163005), (-0.78881437, 0.44721362, -0.42163005), (-0.78881437, 0.44721365, -0.42163008), (-0.74368906, 0.4472136, -0.49691716), (-0.743689, 0.44721362, -0.4969171), (-0.743689, 0.44721362, -0.4969171), (-0.74368906, 0.4472136, -0.49691716), (-0.6914016, 0.4472136, -0.5674186), (-0.6914016, 0.44721362, -0.5674186), (-0.6914016, 0.44721362, -0.5674186), (-0.6914016, 0.4472136, -0.5674186), (-0.6324555, 0.4472136, -0.6324555), (-0.6324555, 0.44721356, -0.6324555), (-0.6324555, 0.44721356, -0.6324555), (-0.6324555, 0.4472136, -0.6324555), (-0.5674186, 0.4472136, -0.6914016), (-0.5674186, 0.44721362, -0.6914016), (-0.5674186, 0.44721362, -0.6914016), (-0.5674186, 0.4472136, -0.6914016), (-0.49691716, 0.4472136, -0.74368906), (-0.4969171, 0.44721362, -0.743689), (-0.4969171, 0.44721362, -0.743689), (-0.49691716, 0.4472136, -0.74368906), (-0.42163008, 0.44721365, -0.78881437), (-0.42163005, 0.44721362, -0.78881437), (-0.42163005, 0.44721362, -0.78881437), (-0.42163008, 0.44721365, -0.78881437), (-0.34228247, 0.4472136, -0.826343), (-0.34228247, 0.44721362, -0.826343), (-0.34228247, 0.44721362, -0.826343), (-0.34228247, 0.4472136, -0.826343), (-0.25963852, 0.4472136, -0.85591346), (-0.25963852, 0.44721362, -0.85591346), (-0.25963852, 0.44721362, -0.85591346), (-0.25963852, 0.4472136, -0.85591346), (-0.17449409, 0.4472136, -0.8772411), (-0.17449409, 0.44721362, -0.8772411), (-0.17449409, 0.44721362, -0.8772411), (-0.17449409, 0.4472136, -0.8772411), (-0.08766919, 0.4472136, -0.89012027), (-0.08766919, 0.44721356, -0.8901202), (-0.08766919, 0.44721356, -0.8901202), (-0.08766919, 0.4472136, -0.89012027), (-1.6430361e-16, 0.4472136, -0.8944272), (-1.6430359e-16, 0.44721356, -0.8944271), (-1.6430359e-16, 0.44721356, -0.8944271), (-1.6430361e-16, 0.4472136, -0.8944272), (0.08766919, 0.4472136, -0.89012027), (0.08766919, 0.44721356, -0.8901202), (0.08766919, 0.44721356, -0.8901202), (0.08766919, 0.4472136, -0.89012027), (0.17449409, 0.4472136, -0.8772411), (0.17449409, 0.44721362, -0.8772411), (0.17449409, 0.44721362, -0.8772411), (0.17449409, 0.4472136, -0.8772411), (0.25963852, 0.4472136, -0.85591346), (0.25963852, 0.44721362, -0.85591346), (0.25963852, 0.44721362, -0.85591346), (0.25963852, 0.4472136, -0.85591346), (0.34228247, 0.4472136, -0.826343), (0.34228247, 0.44721362, -0.826343), (0.34228247, 0.44721362, -0.826343), (0.34228247, 0.4472136, -0.826343), (0.42163008, 0.44721365, -0.78881437), (0.42163005, 0.44721362, -0.78881437), (0.42163005, 0.44721362, -0.78881437), (0.42163008, 0.44721365, -0.78881437), (0.49691716, 0.4472136, -0.74368906), (0.4969171, 0.44721362, -0.743689), (0.4969171, 0.44721362, -0.743689), (0.49691716, 0.4472136, -0.74368906), (0.5674186, 0.4472136, -0.6914016), (0.5674186, 0.44721362, -0.6914016), (0.5674186, 0.44721362, -0.6914016), (0.5674186, 0.4472136, -0.6914016), (0.6324555, 0.4472136, -0.6324555), (0.6324555, 0.44721356, -0.6324555), (0.6324555, 0.44721356, -0.6324555), (0.6324555, 0.4472136, -0.6324555), (0.6914016, 0.4472136, -0.5674186), (0.6914016, 0.44721362, -0.5674186), (0.6914016, 0.44721362, -0.5674186), (0.6914016, 0.4472136, -0.5674186), (0.74368906, 0.4472136, -0.49691716), (0.743689, 0.44721362, -0.4969171), (0.743689, 0.44721362, -0.4969171), (0.74368906, 0.4472136, -0.49691716), (0.78881437, 0.44721365, -0.42163008), (0.78881437, 0.44721362, -0.42163005), (0.78881437, 0.44721362, -0.42163005), (0.78881437, 0.44721365, -0.42163008), (0.826343, 0.4472136, -0.34228247), (0.826343, 0.44721362, -0.34228247), (0.826343, 0.44721362, -0.34228247), (0.826343, 0.4472136, -0.34228247), (0.85591346, 0.4472136, -0.25963852), (0.85591346, 0.44721362, -0.25963852), (0.85591346, 0.44721362, -0.25963852), (0.85591346, 0.4472136, -0.25963852), (0.8772411, 0.4472136, -0.17449409), (0.87724096, 0.44721356, -0.17449406), (0.87724096, 0.44721356, -0.17449406), (0.8772411, 0.4472136, -0.17449409), (0.89012027, 0.4472136, -0.08766919), (0.8901202, 0.44721356, -0.08766919), (0.8901202, 0.44721356, -0.08766919), (0.89012027, 0.4472136, -0.08766919), (0.8944272, 0.4472136, 0), (0.8944271, 0.44721356, 0), (0.8944272, 0.4472136, 0), (0.8944272, 0.4472136, 0), (0.8901203, 0.44721362, 0.087669194), (0.89012027, 0.4472136, 0.08766919), (0.89012027, 0.4472136, 0.08766919), (0.8901203, 0.44721362, 0.087669194), (0.8772411, 0.4472136, 0.17449409), (0.8772411, 0.4472136, 0.17449409), (0.8772411, 0.4472136, 0.17449409), (0.8772411, 0.4472136, 0.17449409), (0.85591346, 0.4472136, 0.25963852), (0.85591346, 0.4472136, 0.25963852), (0.85591346, 0.4472136, 0.25963852), (0.85591346, 0.4472136, 0.25963852), (0.82634294, 0.4472136, 0.34228247), (0.826343, 0.4472136, 0.34228247), (0.826343, 0.4472136, 0.34228247), (0.82634294, 0.4472136, 0.34228247), (0.78881437, 0.4472136, 0.42163005), (0.78881437, 0.44721365, 0.42163008), (0.78881437, 0.44721365, 0.42163008), (0.78881437, 0.4472136, 0.42163005), (0.743689, 0.4472136, 0.49691713), (0.74368906, 0.4472136, 0.49691716), (0.74368906, 0.4472136, 0.49691716), (0.743689, 0.4472136, 0.49691713), (0.69140154, 0.4472136, 0.5674186), (0.6914016, 0.4472136, 0.5674186), (0.6914016, 0.4472136, 0.5674186), (0.69140154, 0.4472136, 0.5674186), (0.6324555, 0.4472136, 0.6324555), (0.6324555, 0.4472136, 0.6324555), (0.6324555, 0.4472136, 0.6324555), (0.6324555, 0.4472136, 0.6324555), (0.5674186, 0.4472136, 0.69140154), (0.5674186, 0.4472136, 0.6914016), (0.5674186, 0.4472136, 0.6914016), (0.5674186, 0.4472136, 0.69140154), (0.49691713, 0.4472136, 0.743689), (0.49691716, 0.4472136, 0.74368906), (0.49691716, 0.4472136, 0.74368906), (0.49691713, 0.4472136, 0.743689), (0.42163005, 0.4472136, 0.78881437), (0.42163008, 0.44721365, 0.78881437), (0.42163008, 0.44721365, 0.78881437), (0.42163005, 0.4472136, 0.78881437), (0.34228247, 0.4472136, 0.82634294), (0.34228247, 0.4472136, 0.826343), (0.34228247, 0.4472136, 0.826343), (0.34228247, 0.4472136, 0.82634294), (0.25963852, 0.4472136, 0.85591346), (0.25963852, 0.4472136, 0.85591346), (0.25963852, 0.4472136, 0.85591346), (0.25963852, 0.4472136, 0.85591346), (0.17449409, 0.4472136, 0.8772411), (0.17449409, 0.4472136, 0.8772411), (0.17449409, 0.4472136, 0.8772411), (0.17449409, 0.4472136, 0.8772411), (0.087669194, 0.44721362, 0.8901203), (0.08766919, 0.4472136, 0.89012027), (0.08766919, 0.4472136, 0.89012027), (0.087669194, 0.44721362, 0.8901203), (5.476787e-17, 0.4472136, 0.8944272), (5.476787e-17, 0.4472136, 0.8944272), (5.476787e-17, 0.4472136, 0.8944272), (5.476787e-17, 0.4472136, 0.8944272), (-0.087669194, 0.44721362, 0.8901203), (-0.08766919, 0.4472136, 0.89012027), (-0.08766919, 0.4472136, 0.89012027), (-0.087669194, 0.44721362, 0.8901203), (-0.17449409, 0.4472136, 0.8772411), (-0.17449409, 0.4472136, 0.8772411), (-0.17449409, 0.4472136, 0.8772411), (-0.17449409, 0.4472136, 0.8772411), (-0.25963852, 0.4472136, 0.85591346), (-0.25963852, 0.4472136, 0.85591346), (-0.25963852, 0.4472136, 0.85591346), (-0.25963852, 0.4472136, 0.85591346), (-0.34228247, 0.4472136, 0.82634294), (-0.34228247, 0.4472136, 0.826343), (-0.34228247, 0.4472136, 0.826343), (-0.34228247, 0.4472136, 0.82634294), (-0.42163005, 0.4472136, 0.78881437), (-0.42163008, 0.44721365, 0.78881437), (-0.42163008, 0.44721365, 0.78881437), (-0.42163005, 0.4472136, 0.78881437), (-0.49691713, 0.4472136, 0.743689), (-0.49691716, 0.4472136, 0.74368906), (-0.49691716, 0.4472136, 0.74368906), (-0.49691713, 0.4472136, 0.743689), (-0.5674186, 0.4472136, 0.69140154), (-0.5674186, 0.4472136, 0.6914016), (-0.5674186, 0.4472136, 0.6914016), (-0.5674186, 0.4472136, 0.69140154), (-0.6324555, 0.4472136, 0.6324555), (-0.6324555, 0.4472136, 0.6324555), (-0.6324555, 0.4472136, 0.6324555), (-0.6324555, 0.4472136, 0.6324555), (-0.69140154, 0.4472136, 0.5674186), (-0.6914016, 0.4472136, 0.5674186), (-0.6914016, 0.4472136, 0.5674186), (-0.69140154, 0.4472136, 0.5674186), (-0.743689, 0.4472136, 0.49691713), (-0.74368906, 0.4472136, 0.49691716), (-0.74368906, 0.4472136, 0.49691716), (-0.743689, 0.4472136, 0.49691713), (-0.78881437, 0.4472136, 0.42163005), (-0.78881437, 0.44721365, 0.42163008), (-0.78881437, 0.44721365, 0.42163008), (-0.78881437, 0.4472136, 0.42163005), (-0.82634294, 0.4472136, 0.34228247), (-0.826343, 0.4472136, 0.34228247), (-0.826343, 0.4472136, 0.34228247), (-0.82634294, 0.4472136, 0.34228247), (-0.85591346, 0.4472136, 0.25963852), (-0.85591346, 0.4472136, 0.25963852), (-0.85591346, 0.4472136, 0.25963852), (-0.85591346, 0.4472136, 0.25963852), (-0.8772411, 0.4472136, 0.17449409), (-0.8772411, 0.4472136, 0.17449409), (-0.8772411, 0.4472136, 0.17449409), (-0.8772411, 0.4472136, 0.17449409), (-0.8901203, 0.44721362, 0.087669194), (-0.89012027, 0.4472136, 0.08766919), (-0.89012027, 0.4472136, 0.08766919), (-0.8901203, 0.44721362, 0.087669194), (-0.8944272, 0.4472136, 1.0953574e-16), (-0.8944272, 0.4472136, 1.0953574e-16), (-0.8944272, 0.4472136, 1.0953574e-16), (-0.8944272, 0.4472136, 1.0953574e-16), (-0.8901203, 0.44721362, -0.087669194), (-0.89012027, 0.4472136, -0.08766919), (-0.89012027, 0.4472136, -0.08766919), (-0.8901203, 0.44721362, -0.087669194), (-0.8772411, 0.4472136, -0.17449409), (-0.8772411, 0.4472136, -0.17449409), (-0.8772411, 0.4472136, -0.17449409), (-0.8772411, 0.4472136, -0.17449409), (-0.85591346, 0.4472136, -0.25963852), (-0.85591346, 0.4472136, -0.25963852), (-0.85591346, 0.4472136, -0.25963852), (-0.85591346, 0.4472136, -0.25963852), (-0.82634294, 0.4472136, -0.34228247), (-0.826343, 0.4472136, -0.34228247), (-0.826343, 0.4472136, -0.34228247), (-0.82634294, 0.4472136, -0.34228247), (-0.78881437, 0.4472136, -0.42163005), (-0.78881437, 0.44721365, -0.42163008), (-0.78881437, 0.44721365, -0.42163008), (-0.78881437, 0.4472136, -0.42163005), (-0.743689, 0.4472136, -0.49691713), (-0.74368906, 0.4472136, -0.49691716), (-0.74368906, 0.4472136, -0.49691716), (-0.743689, 0.4472136, -0.49691713), (-0.69140154, 0.4472136, -0.5674186), (-0.6914016, 0.4472136, -0.5674186), (-0.6914016, 0.4472136, -0.5674186), (-0.69140154, 0.4472136, -0.5674186), (-0.6324555, 0.4472136, -0.6324555), (-0.6324555, 0.4472136, -0.6324555), (-0.6324555, 0.4472136, -0.6324555), (-0.6324555, 0.4472136, -0.6324555), (-0.5674186, 0.4472136, -0.69140154), (-0.5674186, 0.4472136, -0.6914016), (-0.5674186, 0.4472136, -0.6914016), (-0.5674186, 0.4472136, -0.69140154), (-0.49691713, 0.4472136, -0.743689), (-0.49691716, 0.4472136, -0.74368906), (-0.49691716, 0.4472136, -0.74368906), (-0.49691713, 0.4472136, -0.743689), (-0.42163005, 0.4472136, -0.78881437), (-0.42163008, 0.44721365, -0.78881437), (-0.42163008, 0.44721365, -0.78881437), (-0.42163005, 0.4472136, -0.78881437), (-0.34228247, 0.4472136, -0.82634294), (-0.34228247, 0.4472136, -0.826343), (-0.34228247, 0.4472136, -0.826343), (-0.34228247, 0.4472136, -0.82634294), (-0.25963852, 0.4472136, -0.85591346), (-0.25963852, 0.4472136, -0.85591346), (-0.25963852, 0.4472136, -0.85591346), (-0.25963852, 0.4472136, -0.85591346), (-0.17449409, 0.4472136, -0.8772411), (-0.17449409, 0.4472136, -0.8772411), (-0.17449409, 0.4472136, -0.8772411), (-0.17449409, 0.4472136, -0.8772411), (-0.087669194, 0.44721362, -0.8901203), (-0.08766919, 0.4472136, -0.89012027), (-0.08766919, 0.4472136, -0.89012027), (-0.087669194, 0.44721362, -0.8901203), (-1.6430361e-16, 0.4472136, -0.8944272), (-1.6430361e-16, 0.4472136, -0.8944272), (-1.6430361e-16, 0.4472136, -0.8944272), (-1.6430361e-16, 0.4472136, -0.8944272), (0.087669194, 0.44721362, -0.8901203), (0.08766919, 0.4472136, -0.89012027), (0.08766919, 0.4472136, -0.89012027), (0.087669194, 0.44721362, -0.8901203), (0.17449409, 0.4472136, -0.8772411), (0.17449409, 0.4472136, -0.8772411), (0.17449409, 0.4472136, -0.8772411), (0.17449409, 0.4472136, -0.8772411), (0.25963852, 0.4472136, -0.85591346), (0.25963852, 0.4472136, -0.85591346), (0.25963852, 0.4472136, -0.85591346), (0.25963852, 0.4472136, -0.85591346), (0.34228247, 0.4472136, -0.82634294), (0.34228247, 0.4472136, -0.826343), (0.34228247, 0.4472136, -0.826343), (0.34228247, 0.4472136, -0.82634294), (0.42163005, 0.4472136, -0.78881437), (0.42163008, 0.44721365, -0.78881437), (0.42163008, 0.44721365, -0.78881437), (0.42163005, 0.4472136, -0.78881437), (0.49691713, 0.4472136, -0.743689), (0.49691716, 0.4472136, -0.74368906), (0.49691716, 0.4472136, -0.74368906), (0.49691713, 0.4472136, -0.743689), (0.5674186, 0.4472136, -0.69140154), (0.5674186, 0.4472136, -0.6914016), (0.5674186, 0.4472136, -0.6914016), (0.5674186, 0.4472136, -0.69140154), (0.6324555, 0.4472136, -0.6324555), (0.6324555, 0.4472136, -0.6324555), (0.6324555, 0.4472136, -0.6324555), (0.6324555, 0.4472136, -0.6324555), (0.69140154, 0.4472136, -0.5674186), (0.6914016, 0.4472136, -0.5674186), (0.6914016, 0.4472136, -0.5674186), (0.69140154, 0.4472136, -0.5674186), (0.743689, 0.4472136, -0.49691713), (0.74368906, 0.4472136, -0.49691716), (0.74368906, 0.4472136, -0.49691716), (0.743689, 0.4472136, -0.49691713), (0.78881437, 0.4472136, -0.42163005), (0.78881437, 0.44721365, -0.42163008), (0.78881437, 0.44721365, -0.42163008), (0.78881437, 0.4472136, -0.42163005), (0.82634294, 0.4472136, -0.34228247), (0.826343, 0.4472136, -0.34228247), (0.826343, 0.4472136, -0.34228247), (0.82634294, 0.4472136, -0.34228247), (0.85591346, 0.4472136, -0.25963852), (0.85591346, 0.4472136, -0.25963852), (0.85591346, 0.4472136, -0.25963852), (0.85591346, 0.4472136, -0.25963852), (0.8772411, 0.4472136, -0.17449409), (0.8772411, 0.4472136, -0.17449409), (0.8772411, 0.4472136, -0.17449409), (0.8772411, 0.4472136, -0.17449409), (0.8901203, 0.44721362, -0.087669194), (0.89012027, 0.4472136, -0.08766919), (0.89012027, 0.4472136, -0.08766919), (0.8901203, 0.44721362, -0.087669194), (0.8944272, 0.4472136, 0), (0.8944272, 0.4472136, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, 0.99999, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(50, -50, 0), (49.759235, -50, 4.900857), (49.03926, -50, 9.754517), (47.84702, -50, 14.514234), (46.193974, -50, 19.13417), (44.096066, -50, 23.569838), (41.57348, -50, 27.778513), (38.65052, -50, 31.719664), (35.35534, -50, 35.35534), (31.719664, -50, 38.65052), (27.778513, -50, 41.57348), (23.569838, -50, 44.096066), (19.13417, -50, 46.193974), (14.514234, -50, 47.84702), (9.754517, -50, 49.03926), (4.900857, -50, 49.759235), (3.061617e-15, -50, 50), (-4.900857, -50, 49.759235), (-9.754517, -50, 49.03926), (-14.514234, -50, 47.84702), (-19.13417, -50, 46.193974), (-23.569838, -50, 44.096066), (-27.778513, -50, 41.57348), (-31.719664, -50, 38.65052), (-35.35534, -50, 35.35534), (-38.65052, -50, 31.719664), (-41.57348, -50, 27.778513), (-44.096066, -50, 23.569838), (-46.193974, -50, 19.13417), (-47.84702, -50, 14.514234), (-49.03926, -50, 9.754517), (-49.759235, -50, 4.900857), (-50, -50, 6.123234e-15), (-49.759235, -50, -4.900857), (-49.03926, -50, -9.754517), (-47.84702, -50, -14.514234), (-46.193974, -50, -19.13417), (-44.096066, -50, -23.569838), (-41.57348, -50, -27.778513), (-38.65052, -50, -31.719664), (-35.35534, -50, -35.35534), (-31.719664, -50, -38.65052), (-27.778513, -50, -41.57348), (-23.569838, -50, -44.096066), (-19.13417, -50, -46.193974), (-14.514234, -50, -47.84702), (-9.754517, -50, -49.03926), (-4.900857, -50, -49.759235), (-9.184851e-15, -50, -50), (4.900857, -50, -49.759235), (9.754517, -50, -49.03926), (14.514234, -50, -47.84702), (19.13417, -50, -46.193974), (23.569838, -50, -44.096066), (27.778513, -50, -41.57348), (31.719664, -50, -38.65052), (35.35534, -50, -35.35534), (38.65052, -50, -31.719664), (41.57348, -50, -27.778513), (44.096066, -50, -23.569838), (46.193974, -50, -19.13417), (47.84702, -50, -14.514234), (49.03926, -50, -9.754517), (49.759235, -50, -4.900857), (33.3335, -16.667, 0), (33.17299, -16.667, 3.2672544), (32.69301, -16.667, 6.503043), (31.89817, -16.667, 9.676205), (30.796137, -16.667, 12.756178), (29.397524, -16.667, 15.713303), (27.715794, -16.667, 18.5191), (25.767145, -16.667, 21.146547), (23.570343, -16.667, 23.570343), (21.146547, -16.667, 25.767145), (18.5191, -16.667, 27.715794), (15.713303, -16.667, 29.397524), (12.756178, -16.667, 30.796137), (9.676205, -16.667, 31.89817), (6.503043, -16.667, 32.69301), (3.2672544, -16.667, 33.17299), (2.041088e-15, -16.667, 33.3335), (-3.2672544, -16.667, 33.17299), (-6.503043, -16.667, 32.69301), (-9.676205, -16.667, 31.89817), (-12.756178, -16.667, 30.796137), (-15.713303, -16.667, 29.397524), (-18.5191, -16.667, 27.715794), (-21.146547, -16.667, 25.767145), (-23.570343, -16.667, 23.570343), (-25.767145, -16.667, 21.146547), (-27.715794, -16.667, 18.5191), (-29.397524, -16.667, 15.713303), (-30.796137, -16.667, 12.756178), (-31.89817, -16.667, 9.676205), (-32.69301, -16.667, 6.503043), (-33.17299, -16.667, 3.2672544), (-33.3335, -16.667, 4.082176e-15), (-33.17299, -16.667, -3.2672544), (-32.69301, -16.667, -6.503043), (-31.89817, -16.667, -9.676205), (-30.796137, -16.667, -12.756178), (-29.397524, -16.667, -15.713303), (-27.715794, -16.667, -18.5191), (-25.767145, -16.667, -21.146547), (-23.570343, -16.667, -23.570343), (-21.146547, -16.667, -25.767145), (-18.5191, -16.667, -27.715794), (-15.713303, -16.667, -29.397524), (-12.756178, -16.667, -30.796137), (-9.676205, -16.667, -31.89817), (-6.503043, -16.667, -32.69301), (-3.2672544, -16.667, -33.17299), (-6.1232647e-15, -16.667, -33.3335), (3.2672544, -16.667, -33.17299), (6.503043, -16.667, -32.69301), (9.676205, -16.667, -31.89817), (12.756178, -16.667, -30.796137), (15.713303, -16.667, -29.397524), (18.5191, -16.667, -27.715794), (21.146547, -16.667, -25.767145), (23.570343, -16.667, -23.570343), (25.767145, -16.667, -21.146547), (27.715794, -16.667, -18.5191), (29.397524, -16.667, -15.713303), (30.796137, -16.667, -12.756178), (31.89817, -16.667, -9.676205), (32.69301, -16.667, -6.503043), (33.17299, -16.667, -3.2672544), (16.667, 16.666, 0), (16.586742, 16.666, 1.6336517), (16.346748, 16.666, 3.2515705), (15.949326, 16.666, 4.838175), (15.3983, 16.666, 6.378185), (14.698982, 16.666, 7.856769), (13.858104, 16.666, 9.259689), (12.883764, 16.666, 10.573433), (11.785349, 16.666, 11.785349), (10.573433, 16.666, 12.883764), (9.259689, 16.666, 13.858104), (7.856769, 16.666, 14.698982), (6.378185, 16.666, 15.3983), (4.838175, 16.666, 15.949326), (3.2515705, 16.666, 16.346748), (1.6336517, 16.666, 16.586742), (1.0205594e-15, 16.666, 16.667), (-1.6336517, 16.666, 16.586742), (-3.2515705, 16.666, 16.346748), (-4.838175, 16.666, 15.949326), (-6.378185, 16.666, 15.3983), (-7.856769, 16.666, 14.698982), (-9.259689, 16.666, 13.858104), (-10.573433, 16.666, 12.883764), (-11.785349, 16.666, 11.785349), (-12.883764, 16.666, 10.573433), (-13.858104, 16.666, 9.259689), (-14.698982, 16.666, 7.856769), (-15.3983, 16.666, 6.378185), (-15.949326, 16.666, 4.838175), (-16.346748, 16.666, 3.2515705), (-16.586742, 16.666, 1.6336517), (-16.667, 16.666, 2.0411188e-15), (-16.586742, 16.666, -1.6336517), (-16.346748, 16.666, -3.2515705), (-15.949326, 16.666, -4.838175), (-15.3983, 16.666, -6.378185), (-14.698982, 16.666, -7.856769), (-13.858104, 16.666, -9.259689), (-12.883764, 16.666, -10.573433), (-11.785349, 16.666, -11.785349), (-10.573433, 16.666, -12.883764), (-9.259689, 16.666, -13.858104), (-7.856769, 16.666, -14.698982), (-6.378185, 16.666, -15.3983), (-4.838175, 16.666, -15.949326), (-3.2515705, 16.666, -16.346748), (-1.6336517, 16.666, -16.586742), (-3.0616783e-15, 16.666, -16.667), (1.6336517, 16.666, -16.586742), (3.2515705, 16.666, -16.346748), (4.838175, 16.666, -15.949326), (6.378185, 16.666, -15.3983), (7.856769, 16.666, -14.698982), (9.259689, 16.666, -13.858104), (10.573433, 16.666, -12.883764), (11.785349, 16.666, -11.785349), (12.883764, 16.666, -10.573433), (13.858104, 16.666, -9.259689), (14.698982, 16.666, -7.856769), (15.3983, 16.666, -6.378185), (15.949326, 16.666, -4.838175), (16.346748, 16.666, -3.2515705), (16.586742, 16.666, -1.6336517), (0.00049999997, 49.999, 0), (0.0004975924, 49.999, 0.00004900857), (0.0004903926, 49.999, 0.00009754516), (0.00047847015, 49.999, 0.00014514233), (0.00046193978, 49.999, 0.00019134172), (0.00044096063, 49.999, 0.00023569838), (0.0004157348, 49.999, 0.00027778512), (0.00038650524, 49.999, 0.00031719665), (0.0003535534, 49.999, 0.0003535534), (0.00031719665, 49.999, 0.00038650524), (0.00027778512, 49.999, 0.0004157348), (0.00023569838, 49.999, 0.00044096063), (0.00019134172, 49.999, 0.00046193978), (0.00014514233, 49.999, 0.00047847015), (0.00009754516, 49.999, 0.0004903926), (0.00004900857, 49.999, 0.0004975924), (3.0616168e-20, 49.999, 0.00049999997), (-0.00004900857, 49.999, 0.0004975924), (-0.00009754516, 49.999, 0.0004903926), (-0.00014514233, 49.999, 0.00047847015), (-0.00019134172, 49.999, 0.00046193978), (-0.00023569838, 49.999, 0.00044096063), (-0.00027778512, 49.999, 0.0004157348), (-0.00031719665, 49.999, 0.00038650524), (-0.0003535534, 49.999, 0.0003535534), (-0.00038650524, 49.999, 0.00031719665), (-0.0004157348, 49.999, 0.00027778512), (-0.00044096063, 49.999, 0.00023569838), (-0.00046193978, 49.999, 0.00019134172), (-0.00047847015, 49.999, 0.00014514233), (-0.0004903926, 49.999, 0.00009754516), (-0.0004975924, 49.999, 0.00004900857), (-0.00049999997, 49.999, 6.1232336e-20), (-0.0004975924, 49.999, -0.00004900857), (-0.0004903926, 49.999, -0.00009754516), (-0.00047847015, 49.999, -0.00014514233), (-0.00046193978, 49.999, -0.00019134172), (-0.00044096063, 49.999, -0.00023569838), (-0.0004157348, 49.999, -0.00027778512), (-0.00038650524, 49.999, -0.00031719665), (-0.0003535534, 49.999, -0.0003535534), (-0.00031719665, 49.999, -0.00038650524), (-0.00027778512, 49.999, -0.0004157348), (-0.00023569838, 49.999, -0.00044096063), (-0.00019134172, 49.999, -0.00046193978), (-0.00014514233, 49.999, -0.00047847015), (-0.00009754516, 49.999, -0.0004903926), (-0.00004900857, 49.999, -0.0004975924), (-9.184851e-20, 49.999, -0.00049999997), (0.00004900857, 49.999, -0.0004975924), (0.00009754516, 49.999, -0.0004903926), (0.00014514233, 49.999, -0.00047847015), (0.00019134172, 49.999, -0.00046193978), (0.00023569838, 49.999, -0.00044096063), (0.00027778512, 49.999, -0.0004157348), (0.00031719665, 49.999, -0.00038650524), (0.0003535534, 49.999, -0.0003535534), (0.00038650524, 49.999, -0.00031719665), (0.0004157348, 49.999, -0.00027778512), (0.00044096063, 49.999, -0.00023569838), (0.00046193978, 49.999, -0.00019134172), (0.00047847015, 49.999, -0.00014514233), (0.0004903926, 49.999, -0.00009754516), (0.0004975924, 49.999, -0.00004900857), (0, 49.9995, 0), (0, -50, 0)]
        texCoord2f[] primvars:st = [(1, 0), (1, 0.33333), (0.984375, 0.33333), (0.984375, 0), (0.984375, 0), (0.984375, 0.33333), (0.96875, 0.33333), (0.96875, 0), (0.96875, 0), (0.96875, 0.33333), (0.953125, 0.33333), (0.953125, 0), (0.953125, 0), (0.953125, 0.33333), (0.9375, 0.33333), (0.9375, 0), (0.9375, 0), (0.9375, 0.33333), (0.921875, 0.33333), (0.921875, 0), (0.921875, 0), (0.921875, 0.33333), (0.90625, 0.33333), (0.90625, 0), (0.90625, 0), (0.90625, 0.33333), (0.890625, 0.33333), (0.890625, 0), (0.890625, 0), (0.890625, 0.33333), (0.875, 0.33333), (0.875, 0), (0.875, 0), (0.875, 0.33333), (0.859375, 0.33333), (0.859375, 0), (0.859375, 0), (0.859375, 0.33333), (0.84375, 0.33333), (0.84375, 0), (0.84375, 0), (0.84375, 0.33333), (0.828125, 0.33333), (0.828125, 0), (0.828125, 0), (0.828125, 0.33333), (0.8125, 0.33333), (0.8125, 0), (0.8125, 0), (0.8125, 0.33333), (0.796875, 0.33333), (0.796875, 0), (0.796875, 0), (0.796875, 0.33333), (0.78125, 0.33333), (0.78125, 0), (0.78125, 0), (0.78125, 0.33333), (0.765625, 0.33333), (0.765625, 0), (0.765625, 0), (0.765625, 0.33333), (0.75, 0.33333), (0.75, 0), (0.75, 0), (0.75, 0.33333), (0.734375, 0.33333), (0.734375, 0), (0.734375, 0), (0.734375, 0.33333), (0.71875, 0.33333), (0.71875, 0), (0.71875, 0), (0.71875, 0.33333), (0.703125, 0.33333), (0.703125, 0), (0.703125, 0), (0.703125, 0.33333), (0.6875, 0.33333), (0.6875, 0), (0.6875, 0), (0.6875, 0.33333), (0.671875, 0.33333), (0.671875, 0), (0.671875, 0), (0.671875, 0.33333), (0.65625, 0.33333), (0.65625, 0), (0.65625, 0), (0.65625, 0.33333), (0.640625, 0.33333), (0.640625, 0), (0.640625, 0), (0.640625, 0.33333), (0.625, 0.33333), (0.625, 0), (0.625, 0), (0.625, 0.33333), (0.609375, 0.33333), (0.609375, 0), (0.609375, 0), (0.609375, 0.33333), (0.59375, 0.33333), (0.59375, 0), (0.59375, 0), (0.59375, 0.33333), (0.578125, 0.33333), (0.578125, 0), (0.578125, 0), (0.578125, 0.33333), (0.5625, 0.33333), (0.5625, 0), (0.5625, 0), (0.5625, 0.33333), (0.546875, 0.33333), (0.546875, 0), (0.546875, 0), (0.546875, 0.33333), (0.53125, 0.33333), (0.53125, 0), (0.53125, 0), (0.53125, 0.33333), (0.515625, 0.33333), (0.515625, 0), (0.515625, 0), (0.515625, 0.33333), (0.5, 0.33333), (0.5, 0), (0.5, 0), (0.5, 0.33333), (0.484375, 0.33333), (0.484375, 0), (0.484375, 0), (0.484375, 0.33333), (0.46875, 0.33333), (0.46875, 0), (0.46875, 0), (0.46875, 0.33333), (0.453125, 0.33333), (0.453125, 0), (0.453125, 0), (0.453125, 0.33333), (0.4375, 0.33333), (0.4375, 0), (0.4375, 0), (0.4375, 0.33333), (0.421875, 0.33333), (0.421875, 0), (0.421875, 0), (0.421875, 0.33333), (0.40625, 0.33333), (0.40625, 0), (0.40625, 0), (0.40625, 0.33333), (0.390625, 0.33333), (0.390625, 0), (0.390625, 0), (0.390625, 0.33333), (0.375, 0.33333), (0.375, 0), (0.375, 0), (0.375, 0.33333), (0.359375, 0.33333), (0.359375, 0), (0.359375, 0), (0.359375, 0.33333), (0.34375, 0.33333), (0.34375, 0), (0.34375, 0), (0.34375, 0.33333), (0.328125, 0.33333), (0.328125, 0), (0.328125, 0), (0.328125, 0.33333), (0.3125, 0.33333), (0.3125, 0), (0.3125, 0), (0.3125, 0.33333), (0.296875, 0.33333), (0.296875, 0), (0.296875, 0), (0.296875, 0.33333), (0.28125, 0.33333), (0.28125, 0), (0.28125, 0), (0.28125, 0.33333), (0.265625, 0.33333), (0.265625, 0), (0.265625, 0), (0.265625, 0.33333), (0.25, 0.33333), (0.25, 0), (0.25, 0), (0.25, 0.33333), (0.234375, 0.33333), (0.234375, 0), (0.234375, 0), (0.234375, 0.33333), (0.21875, 0.33333), (0.21875, 0), (0.21875, 0), (0.21875, 0.33333), (0.203125, 0.33333), (0.203125, 0), (0.203125, 0), (0.203125, 0.33333), (0.1875, 0.33333), (0.1875, 0), (0.1875, 0), (0.1875, 0.33333), (0.171875, 0.33333), (0.171875, 0), (0.171875, 0), (0.171875, 0.33333), (0.15625, 0.33333), (0.15625, 0), (0.15625, 0), (0.15625, 0.33333), (0.140625, 0.33333), (0.140625, 0), (0.140625, 0), (0.140625, 0.33333), (0.125, 0.33333), (0.125, 0), (0.125, 0), (0.125, 0.33333), (0.109375, 0.33333), (0.109375, 0), (0.109375, 0), (0.109375, 0.33333), (0.09375, 0.33333), (0.09375, 0), (0.09375, 0), (0.09375, 0.33333), (0.078125, 0.33333), (0.078125, 0), (0.078125, 0), (0.078125, 0.33333), (0.0625, 0.33333), (0.0625, 0), (0.0625, 0), (0.0625, 0.33333), (0.046875, 0.33333), (0.046875, 0), (0.046875, 0), (0.046875, 0.33333), (0.03125, 0.33333), (0.03125, 0), (0.03125, 0), (0.03125, 0.33333), (0.015625, 0.33333), (0.015625, 0), (0.015625, 0), (0.015625, 0.33333), (0, 0.33333), (0, 0), (1, 0.33333), (1, 0.66666), (0.984375, 0.66666), (0.984375, 0.33333), (0.984375, 0.33333), (0.984375, 0.66666), (0.96875, 0.66666), (0.96875, 0.33333), (0.96875, 0.33333), (0.96875, 0.66666), (0.953125, 0.66666), (0.953125, 0.33333), (0.953125, 0.33333), (0.953125, 0.66666), (0.9375, 0.66666), (0.9375, 0.33333), (0.9375, 0.33333), (0.9375, 0.66666), (0.921875, 0.66666), (0.921875, 0.33333), (0.921875, 0.33333), (0.921875, 0.66666), (0.90625, 0.66666), (0.90625, 0.33333), (0.90625, 0.33333), (0.90625, 0.66666), (0.890625, 0.66666), (0.890625, 0.33333), (0.890625, 0.33333), (0.890625, 0.66666), (0.875, 0.66666), (0.875, 0.33333), (0.875, 0.33333), (0.875, 0.66666), (0.859375, 0.66666), (0.859375, 0.33333), (0.859375, 0.33333), (0.859375, 0.66666), (0.84375, 0.66666), (0.84375, 0.33333), (0.84375, 0.33333), (0.84375, 0.66666), (0.828125, 0.66666), (0.828125, 0.33333), (0.828125, 0.33333), (0.828125, 0.66666), (0.8125, 0.66666), (0.8125, 0.33333), (0.8125, 0.33333), (0.8125, 0.66666), (0.796875, 0.66666), (0.796875, 0.33333), (0.796875, 0.33333), (0.796875, 0.66666), (0.78125, 0.66666), (0.78125, 0.33333), (0.78125, 0.33333), (0.78125, 0.66666), (0.765625, 0.66666), (0.765625, 0.33333), (0.765625, 0.33333), (0.765625, 0.66666), (0.75, 0.66666), (0.75, 0.33333), (0.75, 0.33333), (0.75, 0.66666), (0.734375, 0.66666), (0.734375, 0.33333), (0.734375, 0.33333), (0.734375, 0.66666), (0.71875, 0.66666), (0.71875, 0.33333), (0.71875, 0.33333), (0.71875, 0.66666), (0.703125, 0.66666), (0.703125, 0.33333), (0.703125, 0.33333), (0.703125, 0.66666), (0.6875, 0.66666), (0.6875, 0.33333), (0.6875, 0.33333), (0.6875, 0.66666), (0.671875, 0.66666), (0.671875, 0.33333), (0.671875, 0.33333), (0.671875, 0.66666), (0.65625, 0.66666), (0.65625, 0.33333), (0.65625, 0.33333), (0.65625, 0.66666), (0.640625, 0.66666), (0.640625, 0.33333), (0.640625, 0.33333), (0.640625, 0.66666), (0.625, 0.66666), (0.625, 0.33333), (0.625, 0.33333), (0.625, 0.66666), (0.609375, 0.66666), (0.609375, 0.33333), (0.609375, 0.33333), (0.609375, 0.66666), (0.59375, 0.66666), (0.59375, 0.33333), (0.59375, 0.33333), (0.59375, 0.66666), (0.578125, 0.66666), (0.578125, 0.33333), (0.578125, 0.33333), (0.578125, 0.66666), (0.5625, 0.66666), (0.5625, 0.33333), (0.5625, 0.33333), (0.5625, 0.66666), (0.546875, 0.66666), (0.546875, 0.33333), (0.546875, 0.33333), (0.546875, 0.66666), (0.53125, 0.66666), (0.53125, 0.33333), (0.53125, 0.33333), (0.53125, 0.66666), (0.515625, 0.66666), (0.515625, 0.33333), (0.515625, 0.33333), (0.515625, 0.66666), (0.5, 0.66666), (0.5, 0.33333), (0.5, 0.33333), (0.5, 0.66666), (0.484375, 0.66666), (0.484375, 0.33333), (0.484375, 0.33333), (0.484375, 0.66666), (0.46875, 0.66666), (0.46875, 0.33333), (0.46875, 0.33333), (0.46875, 0.66666), (0.453125, 0.66666), (0.453125, 0.33333), (0.453125, 0.33333), (0.453125, 0.66666), (0.4375, 0.66666), (0.4375, 0.33333), (0.4375, 0.33333), (0.4375, 0.66666), (0.421875, 0.66666), (0.421875, 0.33333), (0.421875, 0.33333), (0.421875, 0.66666), (0.40625, 0.66666), (0.40625, 0.33333), (0.40625, 0.33333), (0.40625, 0.66666), (0.390625, 0.66666), (0.390625, 0.33333), (0.390625, 0.33333), (0.390625, 0.66666), (0.375, 0.66666), (0.375, 0.33333), (0.375, 0.33333), (0.375, 0.66666), (0.359375, 0.66666), (0.359375, 0.33333), (0.359375, 0.33333), (0.359375, 0.66666), (0.34375, 0.66666), (0.34375, 0.33333), (0.34375, 0.33333), (0.34375, 0.66666), (0.328125, 0.66666), (0.328125, 0.33333), (0.328125, 0.33333), (0.328125, 0.66666), (0.3125, 0.66666), (0.3125, 0.33333), (0.3125, 0.33333), (0.3125, 0.66666), (0.296875, 0.66666), (0.296875, 0.33333), (0.296875, 0.33333), (0.296875, 0.66666), (0.28125, 0.66666), (0.28125, 0.33333), (0.28125, 0.33333), (0.28125, 0.66666), (0.265625, 0.66666), (0.265625, 0.33333), (0.265625, 0.33333), (0.265625, 0.66666), (0.25, 0.66666), (0.25, 0.33333), (0.25, 0.33333), (0.25, 0.66666), (0.234375, 0.66666), (0.234375, 0.33333), (0.234375, 0.33333), (0.234375, 0.66666), (0.21875, 0.66666), (0.21875, 0.33333), (0.21875, 0.33333), (0.21875, 0.66666), (0.203125, 0.66666), (0.203125, 0.33333), (0.203125, 0.33333), (0.203125, 0.66666), (0.1875, 0.66666), (0.1875, 0.33333), (0.1875, 0.33333), (0.1875, 0.66666), (0.171875, 0.66666), (0.171875, 0.33333), (0.171875, 0.33333), (0.171875, 0.66666), (0.15625, 0.66666), (0.15625, 0.33333), (0.15625, 0.33333), (0.15625, 0.66666), (0.140625, 0.66666), (0.140625, 0.33333), (0.140625, 0.33333), (0.140625, 0.66666), (0.125, 0.66666), (0.125, 0.33333), (0.125, 0.33333), (0.125, 0.66666), (0.109375, 0.66666), (0.109375, 0.33333), (0.109375, 0.33333), (0.109375, 0.66666), (0.09375, 0.66666), (0.09375, 0.33333), (0.09375, 0.33333), (0.09375, 0.66666), (0.078125, 0.66666), (0.078125, 0.33333), (0.078125, 0.33333), (0.078125, 0.66666), (0.0625, 0.66666), (0.0625, 0.33333), (0.0625, 0.33333), (0.0625, 0.66666), (0.046875, 0.66666), (0.046875, 0.33333), (0.046875, 0.33333), (0.046875, 0.66666), (0.03125, 0.66666), (0.03125, 0.33333), (0.03125, 0.33333), (0.03125, 0.66666), (0.015625, 0.66666), (0.015625, 0.33333), (0.015625, 0.33333), (0.015625, 0.66666), (0, 0.66666), (0, 0.33333), (1, 0.66666), (1, 1), (0.984375, 1), (0.984375, 0.66666), (0.984375, 0.66666), (0.984375, 1), (0.96875, 1), (0.96875, 0.66666), (0.96875, 0.66666), (0.96875, 1), (0.953125, 1), (0.953125, 0.66666), (0.953125, 0.66666), (0.953125, 1), (0.9375, 1), (0.9375, 0.66666), (0.9375, 0.66666), (0.9375, 1), (0.921875, 1), (0.921875, 0.66666), (0.921875, 0.66666), (0.921875, 1), (0.90625, 1), (0.90625, 0.66666), (0.90625, 0.66666), (0.90625, 1), (0.890625, 1), (0.890625, 0.66666), (0.890625, 0.66666), (0.890625, 1), (0.875, 1), (0.875, 0.66666), (0.875, 0.66666), (0.875, 1), (0.859375, 1), (0.859375, 0.66666), (0.859375, 0.66666), (0.859375, 1), (0.84375, 1), (0.84375, 0.66666), (0.84375, 0.66666), (0.84375, 1), (0.828125, 1), (0.828125, 0.66666), (0.828125, 0.66666), (0.828125, 1), (0.8125, 1), (0.8125, 0.66666), (0.8125, 0.66666), (0.8125, 1), (0.796875, 1), (0.796875, 0.66666), (0.796875, 0.66666), (0.796875, 1), (0.78125, 1), (0.78125, 0.66666), (0.78125, 0.66666), (0.78125, 1), (0.765625, 1), (0.765625, 0.66666), (0.765625, 0.66666), (0.765625, 1), (0.75, 1), (0.75, 0.66666), (0.75, 0.66666), (0.75, 1), (0.734375, 1), (0.734375, 0.66666), (0.734375, 0.66666), (0.734375, 1), (0.71875, 1), (0.71875, 0.66666), (0.71875, 0.66666), (0.71875, 1), (0.703125, 1), (0.703125, 0.66666), (0.703125, 0.66666), (0.703125, 1), (0.6875, 1), (0.6875, 0.66666), (0.6875, 0.66666), (0.6875, 1), (0.671875, 1), (0.671875, 0.66666), (0.671875, 0.66666), (0.671875, 1), (0.65625, 1), (0.65625, 0.66666), (0.65625, 0.66666), (0.65625, 1), (0.640625, 1), (0.640625, 0.66666), (0.640625, 0.66666), (0.640625, 1), (0.625, 1), (0.625, 0.66666), (0.625, 0.66666), (0.625, 1), (0.609375, 1), (0.609375, 0.66666), (0.609375, 0.66666), (0.609375, 1), (0.59375, 1), (0.59375, 0.66666), (0.59375, 0.66666), (0.59375, 1), (0.578125, 1), (0.578125, 0.66666), (0.578125, 0.66666), (0.578125, 1), (0.5625, 1), (0.5625, 0.66666), (0.5625, 0.66666), (0.5625, 1), (0.546875, 1), (0.546875, 0.66666), (0.546875, 0.66666), (0.546875, 1), (0.53125, 1), (0.53125, 0.66666), (0.53125, 0.66666), (0.53125, 1), (0.515625, 1), (0.515625, 0.66666), (0.515625, 0.66666), (0.515625, 1), (0.5, 1), (0.5, 0.66666), (0.5, 0.66666), (0.5, 1), (0.484375, 1), (0.484375, 0.66666), (0.484375, 0.66666), (0.484375, 1), (0.46875, 1), (0.46875, 0.66666), (0.46875, 0.66666), (0.46875, 1), (0.453125, 1), (0.453125, 0.66666), (0.453125, 0.66666), (0.453125, 1), (0.4375, 1), (0.4375, 0.66666), (0.4375, 0.66666), (0.4375, 1), (0.421875, 1), (0.421875, 0.66666), (0.421875, 0.66666), (0.421875, 1), (0.40625, 1), (0.40625, 0.66666), (0.40625, 0.66666), (0.40625, 1), (0.390625, 1), (0.390625, 0.66666), (0.390625, 0.66666), (0.390625, 1), (0.375, 1), (0.375, 0.66666), (0.375, 0.66666), (0.375, 1), (0.359375, 1), (0.359375, 0.66666), (0.359375, 0.66666), (0.359375, 1), (0.34375, 1), (0.34375, 0.66666), (0.34375, 0.66666), (0.34375, 1), (0.328125, 1), (0.328125, 0.66666), (0.328125, 0.66666), (0.328125, 1), (0.3125, 1), (0.3125, 0.66666), (0.3125, 0.66666), (0.3125, 1), (0.296875, 1), (0.296875, 0.66666), (0.296875, 0.66666), (0.296875, 1), (0.28125, 1), (0.28125, 0.66666), (0.28125, 0.66666), (0.28125, 1), (0.265625, 1), (0.265625, 0.66666), (0.265625, 0.66666), (0.265625, 1), (0.25, 1), (0.25, 0.66666), (0.25, 0.66666), (0.25, 1), (0.234375, 1), (0.234375, 0.66666), (0.234375, 0.66666), (0.234375, 1), (0.21875, 1), (0.21875, 0.66666), (0.21875, 0.66666), (0.21875, 1), (0.203125, 1), (0.203125, 0.66666), (0.203125, 0.66666), (0.203125, 1), (0.1875, 1), (0.1875, 0.66666), (0.1875, 0.66666), (0.1875, 1), (0.171875, 1), (0.171875, 0.66666), (0.171875, 0.66666), (0.171875, 1), (0.15625, 1), (0.15625, 0.66666), (0.15625, 0.66666), (0.15625, 1), (0.140625, 1), (0.140625, 0.66666), (0.140625, 0.66666), (0.140625, 1), (0.125, 1), (0.125, 0.66666), (0.125, 0.66666), (0.125, 1), (0.109375, 1), (0.109375, 0.66666), (0.109375, 0.66666), (0.109375, 1), (0.09375, 1), (0.09375, 0.66666), (0.09375, 0.66666), (0.09375, 1), (0.078125, 1), (0.078125, 0.66666), (0.078125, 0.66666), (0.078125, 1), (0.0625, 1), (0.0625, 0.66666), (0.0625, 0.66666), (0.0625, 1), (0.046875, 1), (0.046875, 0.66666), (0.046875, 0.66666), (0.046875, 1), (0.03125, 1), (0.03125, 0.66666), (0.03125, 0.66666), (0.03125, 1), (0.015625, 1), (0.015625, 0.66666), (0.015625, 0.66666), (0.015625, 1), (0, 1), (0, 0.66666), (1, 0.5), (0.5, 0.5), (0.99759233, 0.45099142), (0.99759233, 0.45099142), (0.5, 0.5), (0.99039257, 0.40245482), (0.99039257, 0.40245482), (0.5, 0.5), (0.9784702, 0.35485768), (0.9784702, 0.35485768), (0.5, 0.5), (0.9619397, 0.3086583), (0.9619397, 0.3086583), (0.5, 0.5), (0.94096065, 0.26430163), (0.94096065, 0.26430163), (0.5, 0.5), (0.91573477, 0.22221488), (0.91573477, 0.22221488), (0.5, 0.5), (0.88650525, 0.18280336), (0.88650525, 0.18280336), (0.5, 0.5), (0.8535534, 0.14644662), (0.8535534, 0.14644662), (0.5, 0.5), (0.8171966, 0.11349478), (0.8171966, 0.11349478), (0.5, 0.5), (0.7777851, 0.0842652), (0.7777851, 0.0842652), (0.5, 0.5), (0.73569834, 0.059039354), (0.73569834, 0.059039354), (0.5, 0.5), (0.6913417, 0.038060278), (0.6913417, 0.038060278), (0.5, 0.5), (0.6451423, 0.021529794), (0.6451423, 0.021529794), (0.5, 0.5), (0.59754515, 0.0096074045), (0.59754515, 0.0096074045), (0.5, 0.5), (0.5490086, 0.0024076402), (0.5490086, 0.0024076402), (0.5, 0.5), (0.5, 0), (0.5, 0), (0.5, 0.5), (0.45099145, 0.0024076402), (0.45099145, 0.0024076402), (0.5, 0.5), (0.40245485, 0.0096074045), (0.40245485, 0.0096074045), (0.5, 0.5), (0.35485768, 0.021529794), (0.35485768, 0.021529794), (0.5, 0.5), (0.3086583, 0.038060278), (0.3086583, 0.038060278), (0.5, 0.5), (0.26430166, 0.059039354), (0.26430166, 0.059039354), (0.5, 0.5), (0.22221488, 0.0842652), (0.22221488, 0.0842652), (0.5, 0.5), (0.18280339, 0.11349478), (0.18280339, 0.11349478), (0.5, 0.5), (0.14644659, 0.14644662), (0.14644659, 0.14644662), (0.5, 0.5), (0.113494754, 0.18280336), (0.113494754, 0.18280336), (0.5, 0.5), (0.08426523, 0.22221488), (0.08426523, 0.22221488), (0.5, 0.5), (0.059039354, 0.26430163), (0.059039354, 0.26430163), (0.5, 0.5), (0.038060308, 0.3086583), (0.038060308, 0.3086583), (0.5, 0.5), (0.021529794, 0.35485768), (0.021529794, 0.35485768), (0.5, 0.5), (0.009607434, 0.40245482), (0.009607434, 0.40245482), (0.5, 0.5), (0.00240767, 0.45099142), (0.00240767, 0.45099142), (0.5, 0.5), (0, 0.5), (0, 0.5), (0.5, 0.5), (0.00240767, 0.54900855), (0.00240767, 0.54900855), (0.5, 0.5), (0.009607434, 0.59754515), (0.009607434, 0.59754515), (0.5, 0.5), (0.021529794, 0.6451423), (0.021529794, 0.6451423), (0.5, 0.5), (0.038060308, 0.6913417), (0.038060308, 0.6913417), (0.5, 0.5), (0.059039354, 0.73569834), (0.059039354, 0.73569834), (0.5, 0.5), (0.08426523, 0.7777851), (0.08426523, 0.7777851), (0.5, 0.5), (0.113494754, 0.8171966), (0.113494754, 0.8171966), (0.5, 0.5), (0.14644659, 0.8535534), (0.14644659, 0.8535534), (0.5, 0.5), (0.18280339, 0.88650525), (0.18280339, 0.88650525), (0.5, 0.5), (0.22221488, 0.91573477), (0.22221488, 0.91573477), (0.5, 0.5), (0.26430166, 0.94096065), (0.26430166, 0.94096065), (0.5, 0.5), (0.3086583, 0.9619397), (0.3086583, 0.9619397), (0.5, 0.5), (0.35485768, 0.9784702), (0.35485768, 0.9784702), (0.5, 0.5), (0.40245485, 0.99039257), (0.40245485, 0.99039257), (0.5, 0.5), (0.45099145, 0.99759233), (0.45099145, 0.99759233), (0.5, 0.5), (0.5, 1), (0.5, 1), (0.5, 0.5), (0.5490086, 0.99759233), (0.5490086, 0.99759233), (0.5, 0.5), (0.59754515, 0.99039257), (0.59754515, 0.99039257), (0.5, 0.5), (0.6451423, 0.9784702), (0.6451423, 0.9784702), (0.5, 0.5), (0.6913417, 0.9619397), (0.6913417, 0.9619397), (0.5, 0.5), (0.73569834, 0.94096065), (0.73569834, 0.94096065), (0.5, 0.5), (0.7777851, 0.91573477), (0.7777851, 0.91573477), (0.5, 0.5), (0.8171966, 0.88650525), (0.8171966, 0.88650525), (0.5, 0.5), (0.8535534, 0.8535534), (0.8535534, 0.8535534), (0.5, 0.5), (0.88650525, 0.8171966), (0.88650525, 0.8171966), (0.5, 0.5), (0.91573477, 0.7777851), (0.91573477, 0.7777851), (0.5, 0.5), (0.94096065, 0.73569834), (0.94096065, 0.73569834), (0.5, 0.5), (0.9619397, 0.6913417), (0.9619397, 0.6913417), (0.5, 0.5), (0.9784702, 0.6451423), (0.9784702, 0.6451423), (0.5, 0.5), (0.99039257, 0.59754515), (0.99039257, 0.59754515), (0.5, 0.5), (0.99759233, 0.54900855), (0.99759233, 0.54900855), (0.5, 0.5), (1, 0.5), (1, 0.5), (0.99759233, 0.5490086), (0.5, 0.5), (0.99759233, 0.5490086), (0.99039257, 0.59754515), (0.5, 0.5), (0.99039257, 0.59754515), (0.9784702, 0.6451423), (0.5, 0.5), (0.9784702, 0.6451423), (0.9619397, 0.6913417), (0.5, 0.5), (0.9619397, 0.6913417), (0.94096065, 0.73569834), (0.5, 0.5), (0.94096065, 0.73569834), (0.91573477, 0.7777851), (0.5, 0.5), (0.91573477, 0.7777851), (0.88650525, 0.8171966), (0.5, 0.5), (0.88650525, 0.8171966), (0.8535534, 0.8535534), (0.5, 0.5), (0.8535534, 0.8535534), (0.8171966, 0.88650525), (0.5, 0.5), (0.8171966, 0.88650525), (0.7777851, 0.91573477), (0.5, 0.5), (0.7777851, 0.91573477), (0.73569834, 0.94096065), (0.5, 0.5), (0.73569834, 0.94096065), (0.6913417, 0.9619397), (0.5, 0.5), (0.6913417, 0.9619397), (0.6451423, 0.9784702), (0.5, 0.5), (0.6451423, 0.9784702), (0.59754515, 0.99039257), (0.5, 0.5), (0.59754515, 0.99039257), (0.5490086, 0.99759233), (0.5, 0.5), (0.5490086, 0.99759233), (0.5, 1), (0.5, 0.5), (0.5, 1), (0.45099145, 0.99759233), (0.5, 0.5), (0.45099145, 0.99759233), (0.40245485, 0.99039257), (0.5, 0.5), (0.40245485, 0.99039257), (0.35485768, 0.9784702), (0.5, 0.5), (0.35485768, 0.9784702), (0.3086583, 0.9619397), (0.5, 0.5), (0.3086583, 0.9619397), (0.26430166, 0.94096065), (0.5, 0.5), (0.26430166, 0.94096065), (0.22221488, 0.91573477), (0.5, 0.5), (0.22221488, 0.91573477), (0.18280339, 0.88650525), (0.5, 0.5), (0.18280339, 0.88650525), (0.14644659, 0.8535534), (0.5, 0.5), (0.14644659, 0.8535534), (0.113494754, 0.8171966), (0.5, 0.5), (0.113494754, 0.8171966), (0.08426523, 0.7777851), (0.5, 0.5), (0.08426523, 0.7777851), (0.059039354, 0.73569834), (0.5, 0.5), (0.059039354, 0.73569834), (0.038060308, 0.6913417), (0.5, 0.5), (0.038060308, 0.6913417), (0.021529794, 0.6451423), (0.5, 0.5), (0.021529794, 0.6451423), (0.009607434, 0.59754515), (0.5, 0.5), (0.009607434, 0.59754515), (0.00240767, 0.5490086), (0.5, 0.5), (0.00240767, 0.5490086), (0, 0.5), (0.5, 0.5), (0, 0.5), (0.00240767, 0.45099145), (0.5, 0.5), (0.00240767, 0.45099145), (0.009607434, 0.40245485), (0.5, 0.5), (0.009607434, 0.40245485), (0.021529794, 0.35485768), (0.5, 0.5), (0.021529794, 0.35485768), (0.038060308, 0.3086583), (0.5, 0.5), (0.038060308, 0.3086583), (0.059039354, 0.26430166), (0.5, 0.5), (0.059039354, 0.26430166), (0.08426523, 0.22221488), (0.5, 0.5), (0.08426523, 0.22221488), (0.113494754, 0.18280339), (0.5, 0.5), (0.113494754, 0.18280339), (0.14644659, 0.14644659), (0.5, 0.5), (0.14644659, 0.14644659), (0.18280339, 0.113494754), (0.5, 0.5), (0.18280339, 0.113494754), (0.22221488, 0.08426523), (0.5, 0.5), (0.22221488, 0.08426523), (0.26430166, 0.059039354), (0.5, 0.5), (0.26430166, 0.059039354), (0.3086583, 0.038060308), (0.5, 0.5), (0.3086583, 0.038060308), (0.35485768, 0.021529794), (0.5, 0.5), (0.35485768, 0.021529794), (0.40245485, 0.009607434), (0.5, 0.5), (0.40245485, 0.009607434), (0.45099145, 0.00240767), (0.5, 0.5), (0.45099145, 0.00240767), (0.5, 0), (0.5, 0.5), (0.5, 0), (0.5490086, 0.00240767), (0.5, 0.5), (0.5490086, 0.00240767), (0.59754515, 0.009607434), (0.5, 0.5), (0.59754515, 0.009607434), (0.6451423, 0.021529794), (0.5, 0.5), (0.6451423, 0.021529794), (0.6913417, 0.038060308), (0.5, 0.5), (0.6913417, 0.038060308), (0.73569834, 0.059039354), (0.5, 0.5), (0.73569834, 0.059039354), (0.7777851, 0.08426523), (0.5, 0.5), (0.7777851, 0.08426523), (0.8171966, 0.113494754), (0.5, 0.5), (0.8171966, 0.113494754), (0.8535534, 0.14644659), (0.5, 0.5), (0.8535534, 0.14644659), (0.88650525, 0.18280339), (0.5, 0.5), (0.88650525, 0.18280339), (0.91573477, 0.22221488), (0.5, 0.5), (0.91573477, 0.22221488), (0.94096065, 0.26430166), (0.5, 0.5), (0.94096065, 0.26430166), (0.9619397, 0.3086583), (0.5, 0.5), (0.9619397, 0.3086583), (0.9784702, 0.35485768), (0.5, 0.5), (0.9784702, 0.35485768), (0.99039257, 0.40245485), (0.5, 0.5), (0.99039257, 0.40245485), (0.99759233, 0.45099145), (0.5, 0.5), (0.99759233, 0.45099145), (1, 0.5), (0.5, 0.5)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        matrix4d xformOp:transform:cesium = ( (0.9999999776482578, -2.3869776078132056e-8, 1.7868399490347303e-8, 0), (2.3869786900196073e-8, 0.9999999776480744, -6.056540292521709e-7, 0), (-1.7868385033517665e-8, 6.056540296786863e-7, 0.9999999776480759, 0), (8030.726647600295, -31758.337541040622, -19278.023020452893, 1) )
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale", "xformOp:transform:cesium"]
    }

    def Mesh "Origin"
    {
        float3[] extent = [(-50, -50, -50), (50, 50, 50)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
        texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Scope "BasisCurvesMarker"
    {
        def Mesh "Cylinder" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 32, 33, 1, 1, 33, 34, 2, 2, 34, 35, 3, 3, 35, 36, 4, 4, 36, 37, 5, 5, 37, 38, 6, 6, 38, 39, 7, 7, 39, 40, 8, 8, 40, 41, 9, 9, 41, 42, 10, 10, 42, 43, 11, 11, 43, 44, 12, 12, 44, 45, 13, 13, 45, 46, 14, 14, 46, 47, 15, 15, 47, 48, 16, 16, 48, 49, 17, 17, 49, 50, 18, 18, 50, 51, 19, 19, 51, 52, 20, 20, 52, 53, 21, 21, 53, 54, 22, 22, 54, 55, 23, 23, 55, 56, 24, 24, 56, 57, 25, 25, 57, 58, 26, 26, 58, 59, 27, 27, 59, 60, 28, 28, 60, 61, 29, 29, 61, 62, 30, 30, 62, 63, 31, 31, 63, 32, 0, 0, 1, 64, 1, 2, 64, 2, 3, 64, 3, 4, 64, 4, 5, 64, 5, 6, 64, 6, 7, 64, 7, 8, 64, 8, 9, 64, 9, 10, 64, 10, 11, 64, 11, 12, 64, 12, 13, 64, 13, 14, 64, 14, 15, 64, 15, 16, 64, 16, 17, 64, 17, 18, 64, 18, 19, 64, 19, 20, 64, 20, 21, 64, 21, 22, 64, 22, 23, 64, 23, 24, 64, 24, 25, 64, 25, 26, 64, 26, 27, 64, 27, 28, 64, 28, 29, 64, 29, 30, 64, 30, 31, 64, 31, 0, 64, 32, 65, 33, 33, 65, 34, 34, 65, 35, 35, 65, 36, 36, 65, 37, 37, 65, 38, 38, 65, 39, 39, 65, 40, 40, 65, 41, 41, 65, 42, 42, 65, 43, 43, 65, 44, 44, 65, 45, 45, 65, 46, 46, 65, 47, 47, 65, 48, 48, 65, 49, 49, 65, 50, 50, 65, 51, 51, 65, 52, 52, 65, 53, 53, 65, 54, 54, 65, 55, 55, 65, 56, 56, 65, 57, 57, 65, 58, 58, 65, 59, 59, 65, 60, 60, 65, 61, 61, 65, 62, 62, 65, 63, 63, 65, 32]
            rel material:binding = </World/BasisCurvesMarker/Looks/BasisCurvesMarker> (
                bindMaterialAs = "weakerThanDescendants"
            )
            normal3f[] normals = [(50, 0, 0), (50, 0, 0), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (50, 0, 0), (50, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(50, -50, 0), (49.03926, -50, 9.754517), (46.193974, -50, 19.13417), (41.57348, -50, 27.778513), (35.35534, -50, 35.35534), (27.778513, -50, 41.57348), (19.13417, -50, 46.193974), (9.754517, -50, 49.03926), (3.061617e-15, -50, 50), (-9.754517, -50, 49.03926), (-19.13417, -50, 46.193974), (-27.778513, -50, 41.57348), (-35.35534, -50, 35.35534), (-41.57348, -50, 27.778513), (-46.193974, -50, 19.13417), (-49.03926, -50, 9.754517), (-50, -50, 6.123234e-15), (-49.03926, -50, -9.754517), (-46.193974, -50, -19.13417), (-41.57348, -50, -27.778513), (-35.35534, -50, -35.35534), (-27.778513, -50, -41.57348), (-19.13417, -50, -46.193974), (-9.754517, -50, -49.03926), (-9.184851e-15, -50, -50), (9.754517, -50, -49.03926), (19.13417, -50, -46.193974), (27.778513, -50, -41.57348), (35.35534, -50, -35.35534), (41.57348, -50, -27.778513), (46.193974, -50, -19.13417), (49.03926, -50, -9.754517), (50, 50, 0), (49.03926, 50, 9.754517), (46.193974, 50, 19.13417), (41.57348, 50, 27.778513), (35.35534, 50, 35.35534), (27.778513, 50, 41.57348), (19.13417, 50, 46.193974), (9.754517, 50, 49.03926), (3.061617e-15, 50, 50), (-9.754517, 50, 49.03926), (-19.13417, 50, 46.193974), (-27.778513, 50, 41.57348), (-35.35534, 50, 35.35534), (-41.57348, 50, 27.778513), (-46.193974, 50, 19.13417), (-49.03926, 50, 9.754517), (-50, 50, 6.123234e-15), (-49.03926, 50, -9.754517), (-46.193974, 50, -19.13417), (-41.57348, 50, -27.778513), (-35.35534, 50, -35.35534), (-27.778513, 50, -41.57348), (-19.13417, 50, -46.193974), (-9.754517, 50, -49.03926), (-9.184851e-15, 50, -50), (9.754517, 50, -49.03926), (19.13417, 50, -46.193974), (27.778513, 50, -41.57348), (35.35534, 50, -35.35534), (41.57348, 50, -27.778513), (46.193974, 50, -19.13417), (49.03926, 50, -9.754517), (0, -50, 0), (0, 50, 0)]
            texCoord2f[] primvars:st = [(1, 0), (1, 1), (0.96875, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (0.9375, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.90625, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.875, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.84375, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.8125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.78125, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.75, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.71875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.6875, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.65625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.625, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.59375, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.5625, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.53125, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.46875, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.4375, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.40625, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.34375, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.3125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.28125, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.25, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.21875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.1875, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.15625, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.125, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.09375, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.0625, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.03125, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0, 1), (0, 0), (1, 0.5), (0.99039257, 0.59754515), (0.5, 0.5), (0.99039257, 0.59754515), (0.9619397, 0.6913417), (0.5, 0.5), (0.9619397, 0.6913417), (0.91573477, 0.7777851), (0.5, 0.5), (0.91573477, 0.7777851), (0.8535534, 0.8535534), (0.5, 0.5), (0.8535534, 0.8535534), (0.7777851, 0.91573477), (0.5, 0.5), (0.7777851, 0.91573477), (0.6913417, 0.9619397), (0.5, 0.5), (0.6913417, 0.9619397), (0.59754515, 0.99039257), (0.5, 0.5), (0.59754515, 0.99039257), (0.5, 1), (0.5, 0.5), (0.5, 1), (0.40245485, 0.99039257), (0.5, 0.5), (0.40245485, 0.99039257), (0.3086583, 0.9619397), (0.5, 0.5), (0.3086583, 0.9619397), (0.22221488, 0.91573477), (0.5, 0.5), (0.22221488, 0.91573477), (0.14644659, 0.8535534), (0.5, 0.5), (0.14644659, 0.8535534), (0.08426523, 0.7777851), (0.5, 0.5), (0.08426523, 0.7777851), (0.038060308, 0.6913417), (0.5, 0.5), (0.038060308, 0.6913417), (0.009607434, 0.59754515), (0.5, 0.5), (0.009607434, 0.59754515), (0, 0.5), (0.5, 0.5), (0, 0.5), (0.009607434, 0.40245485), (0.5, 0.5), (0.009607434, 0.40245485), (0.038060308, 0.3086583), (0.5, 0.5), (0.038060308, 0.3086583), (0.08426523, 0.22221488), (0.5, 0.5), (0.08426523, 0.22221488), (0.14644659, 0.14644659), (0.5, 0.5), (0.14644659, 0.14644659), (0.22221488, 0.08426523), (0.5, 0.5), (0.22221488, 0.08426523), (0.3086583, 0.038060308), (0.5, 0.5), (0.3086583, 0.038060308), (0.40245485, 0.009607434), (0.5, 0.5), (0.40245485, 0.009607434), (0.5, 0), (0.5, 0.5), (0.5, 0), (0.59754515, 0.009607434), (0.5, 0.5), (0.59754515, 0.009607434), (0.6913417, 0.038060308), (0.5, 0.5), (0.6913417, 0.038060308), (0.7777851, 0.08426523), (0.5, 0.5), (0.7777851, 0.08426523), (0.8535534, 0.14644659), (0.5, 0.5), (0.8535534, 0.14644659), (0.91573477, 0.22221488), (0.5, 0.5), (0.91573477, 0.22221488), (0.9619397, 0.3086583), (0.5, 0.5), (0.9619397, 0.3086583), (0.99039257, 0.40245485), (0.5, 0.5), (0.99039257, 0.40245485), (1, 0.5), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0.99039257, 0.40245482), (0.99039257, 0.40245482), (0.5, 0.5), (0.9619397, 0.3086583), (0.9619397, 0.3086583), (0.5, 0.5), (0.91573477, 0.22221488), (0.91573477, 0.22221488), (0.5, 0.5), (0.8535534, 0.14644662), (0.8535534, 0.14644662), (0.5, 0.5), (0.7777851, 0.0842652), (0.7777851, 0.0842652), (0.5, 0.5), (0.6913417, 0.038060278), (0.6913417, 0.038060278), (0.5, 0.5), (0.59754515, 0.0096074045), (0.59754515, 0.0096074045), (0.5, 0.5), (0.5, 0), (0.5, 0), (0.5, 0.5), (0.40245485, 0.0096074045), (0.40245485, 0.0096074045), (0.5, 0.5), (0.3086583, 0.038060278), (0.3086583, 0.038060278), (0.5, 0.5), (0.22221488, 0.0842652), (0.22221488, 0.0842652), (0.5, 0.5), (0.14644659, 0.14644662), (0.14644659, 0.14644662), (0.5, 0.5), (0.08426523, 0.22221488), (0.08426523, 0.22221488), (0.5, 0.5), (0.038060308, 0.3086583), (0.038060308, 0.3086583), (0.5, 0.5), (0.009607434, 0.40245482), (0.009607434, 0.40245482), (0.5, 0.5), (0, 0.5), (0, 0.5), (0.5, 0.5), (0.009607434, 0.59754515), (0.009607434, 0.59754515), (0.5, 0.5), (0.038060308, 0.6913417), (0.038060308, 0.6913417), (0.5, 0.5), (0.08426523, 0.7777851), (0.08426523, 0.7777851), (0.5, 0.5), (0.14644659, 0.8535534), (0.14644659, 0.8535534), (0.5, 0.5), (0.22221488, 0.91573477), (0.22221488, 0.91573477), (0.5, 0.5), (0.3086583, 0.9619397), (0.3086583, 0.9619397), (0.5, 0.5), (0.40245485, 0.99039257), (0.40245485, 0.99039257), (0.5, 0.5), (0.5, 1), (0.5, 1), (0.5, 0.5), (0.59754515, 0.99039257), (0.59754515, 0.99039257), (0.5, 0.5), (0.6913417, 0.9619397), (0.6913417, 0.9619397), (0.5, 0.5), (0.7777851, 0.91573477), (0.7777851, 0.91573477), (0.5, 0.5), (0.8535534, 0.8535534), (0.8535534, 0.8535534), (0.5, 0.5), (0.91573477, 0.7777851), (0.91573477, 0.7777851), (0.5, 0.5), (0.9619397, 0.6913417), (0.9619397, 0.6913417), (0.5, 0.5), (0.99039257, 0.59754515), (0.99039257, 0.59754515), (0.5, 0.5), (1, 0.5)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            double3 xformOp:rotateXYZ = (0, 0, 0)
            double3 xformOp:scale = (1, 500, 1)
            double3 xformOp:translate = (-2.7284841053187847e-12, -38864.505877885174, -19284.506534750733)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def Mesh "Cylinder_01" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 32, 33, 1, 1, 33, 34, 2, 2, 34, 35, 3, 3, 35, 36, 4, 4, 36, 37, 5, 5, 37, 38, 6, 6, 38, 39, 7, 7, 39, 40, 8, 8, 40, 41, 9, 9, 41, 42, 10, 10, 42, 43, 11, 11, 43, 44, 12, 12, 44, 45, 13, 13, 45, 46, 14, 14, 46, 47, 15, 15, 47, 48, 16, 16, 48, 49, 17, 17, 49, 50, 18, 18, 50, 51, 19, 19, 51, 52, 20, 20, 52, 53, 21, 21, 53, 54, 22, 22, 54, 55, 23, 23, 55, 56, 24, 24, 56, 57, 25, 25, 57, 58, 26, 26, 58, 59, 27, 27, 59, 60, 28, 28, 60, 61, 29, 29, 61, 62, 30, 30, 62, 63, 31, 31, 63, 32, 0, 0, 1, 64, 1, 2, 64, 2, 3, 64, 3, 4, 64, 4, 5, 64, 5, 6, 64, 6, 7, 64, 7, 8, 64, 8, 9, 64, 9, 10, 64, 10, 11, 64, 11, 12, 64, 12, 13, 64, 13, 14, 64, 14, 15, 64, 15, 16, 64, 16, 17, 64, 17, 18, 64, 18, 19, 64, 19, 20, 64, 20, 21, 64, 21, 22, 64, 22, 23, 64, 23, 24, 64, 24, 25, 64, 25, 26, 64, 26, 27, 64, 27, 28, 64, 28, 29, 64, 29, 30, 64, 30, 31, 64, 31, 0, 64, 32, 65, 33, 33, 65, 34, 34, 65, 35, 35, 65, 36, 36, 65, 37, 37, 65, 38, 38, 65, 39, 39, 65, 40, 40, 65, 41, 41, 65, 42, 42, 65, 43, 43, 65, 44, 44, 65, 45, 45, 65, 46, 46, 65, 47, 47, 65, 48, 48, 65, 49, 49, 65, 50, 50, 65, 51, 51, 65, 52, 52, 65, 53, 53, 65, 54, 54, 65, 55, 55, 65, 56, 56, 65, 57, 57, 65, 58, 58, 65, 59, 59, 65, 60, 60, 65, 61, 61, 65, 62, 62, 65, 63, 63, 65, 32]
            rel material:binding = </World/BasisCurvesMarker/Looks/BasisCurvesMarker> (
                bindMaterialAs = "weakerThanDescendants"
            )
            normal3f[] normals = [(50, 0, 0), (50, 0, 0), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (50, 0, 0), (50, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(50, -50, 0), (49.03926, -50, 9.754517), (46.193974, -50, 19.13417), (41.57348, -50, 27.778513), (35.35534, -50, 35.35534), (27.778513, -50, 41.57348), (19.13417, -50, 46.193974), (9.754517, -50, 49.03926), (3.061617e-15, -50, 50), (-9.754517, -50, 49.03926), (-19.13417, -50, 46.193974), (-27.778513, -50, 41.57348), (-35.35534, -50, 35.35534), (-41.57348, -50, 27.778513), (-46.193974, -50, 19.13417), (-49.03926, -50, 9.754517), (-50, -50, 6.123234e-15), (-49.03926, -50, -9.754517), (-46.193974, -50, -19.13417), (-41.57348, -50, -27.778513), (-35.35534, -50, -35.35534), (-27.778513, -50, -41.57348), (-19.13417, -50, -46.193974), (-9.754517, -50, -49.03926), (-9.184851e-15, -50, -50), (9.754517, -50, -49.03926), (19.13417, -50, -46.193974), (27.778513, -50, -41.57348), (35.35534, -50, -35.35534), (41.57348, -50, -27.778513), (46.193974, -50, -19.13417), (49.03926, -50, -9.754517), (50, 50, 0), (49.03926, 50, 9.754517), (46.193974, 50, 19.13417), (41.57348, 50, 27.778513), (35.35534, 50, 35.35534), (27.778513, 50, 41.57348), (19.13417, 50, 46.193974), (9.754517, 50, 49.03926), (3.061617e-15, 50, 50), (-9.754517, 50, 49.03926), (-19.13417, 50, 46.193974), (-27.778513, 50, 41.57348), (-35.35534, 50, 35.35534), (-41.57348, 50, 27.778513), (-46.193974, 50, 19.13417), (-49.03926, 50, 9.754517), (-50, 50, 6.123234e-15), (-49.03926, 50, -9.754517), (-46.193974, 50, -19.13417), (-41.57348, 50, -27.778513), (-35.35534, 50, -35.35534), (-27.778513, 50, -41.57348), (-19.13417, 50, -46.193974), (-9.754517, 50, -49.03926), (-9.184851e-15, 50, -50), (9.754517, 50, -49.03926), (19.13417, 50, -46.193974), (27.778513, 50, -41.57348), (35.35534, 50, -35.35534), (41.57348, 50, -27.778513), (46.193974, 50, -19.13417), (49.03926, 50, -9.754517), (0, -50, 0), (0, 50, 0)]
            texCoord2f[] primvars:st = [(1, 0), (1, 1), (0.96875, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (0.9375, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.90625, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.875, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.84375, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.8125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.78125, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.75, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.71875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.6875, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.65625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.625, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.59375, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.5625, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.53125, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.46875, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.4375, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.40625, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.34375, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.3125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.28125, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.25, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.21875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.1875, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.15625, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.125, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.09375, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.0625, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.03125, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0, 1), (0, 0), (1, 0.5), (0.99039257, 0.59754515), (0.5, 0.5), (0.99039257, 0.59754515), (0.9619397, 0.6913417), (0.5, 0.5), (0.9619397, 0.6913417), (0.91573477, 0.7777851), (0.5, 0.5), (0.91573477, 0.7777851), (0.8535534, 0.8535534), (0.5, 0.5), (0.8535534, 0.8535534), (0.7777851, 0.91573477), (0.5, 0.5), (0.7777851, 0.91573477), (0.6913417, 0.9619397), (0.5, 0.5), (0.6913417, 0.9619397), (0.59754515, 0.99039257), (0.5, 0.5), (0.59754515, 0.99039257), (0.5, 1), (0.5, 0.5), (0.5, 1), (0.40245485, 0.99039257), (0.5, 0.5), (0.40245485, 0.99039257), (0.3086583, 0.9619397), (0.5, 0.5), (0.3086583, 0.9619397), (0.22221488, 0.91573477), (0.5, 0.5), (0.22221488, 0.91573477), (0.14644659, 0.8535534), (0.5, 0.5), (0.14644659, 0.8535534), (0.08426523, 0.7777851), (0.5, 0.5), (0.08426523, 0.7777851), (0.038060308, 0.6913417), (0.5, 0.5), (0.038060308, 0.6913417), (0.009607434, 0.59754515), (0.5, 0.5), (0.009607434, 0.59754515), (0, 0.5), (0.5, 0.5), (0, 0.5), (0.009607434, 0.40245485), (0.5, 0.5), (0.009607434, 0.40245485), (0.038060308, 0.3086583), (0.5, 0.5), (0.038060308, 0.3086583), (0.08426523, 0.22221488), (0.5, 0.5), (0.08426523, 0.22221488), (0.14644659, 0.14644659), (0.5, 0.5), (0.14644659, 0.14644659), (0.22221488, 0.08426523), (0.5, 0.5), (0.22221488, 0.08426523), (0.3086583, 0.038060308), (0.5, 0.5), (0.3086583, 0.038060308), (0.40245485, 0.009607434), (0.5, 0.5), (0.40245485, 0.009607434), (0.5, 0), (0.5, 0.5), (0.5, 0), (0.59754515, 0.009607434), (0.5, 0.5), (0.59754515, 0.009607434), (0.6913417, 0.038060308), (0.5, 0.5), (0.6913417, 0.038060308), (0.7777851, 0.08426523), (0.5, 0.5), (0.7777851, 0.08426523), (0.8535534, 0.14644659), (0.5, 0.5), (0.8535534, 0.14644659), (0.91573477, 0.22221488), (0.5, 0.5), (0.91573477, 0.22221488), (0.9619397, 0.3086583), (0.5, 0.5), (0.9619397, 0.3086583), (0.99039257, 0.40245485), (0.5, 0.5), (0.99039257, 0.40245485), (1, 0.5), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0.99039257, 0.40245482), (0.99039257, 0.40245482), (0.5, 0.5), (0.9619397, 0.3086583), (0.9619397, 0.3086583), (0.5, 0.5), (0.91573477, 0.22221488), (0.91573477, 0.22221488), (0.5, 0.5), (0.8535534, 0.14644662), (0.8535534, 0.14644662), (0.5, 0.5), (0.7777851, 0.0842652), (0.7777851, 0.0842652), (0.5, 0.5), (0.6913417, 0.038060278), (0.6913417, 0.038060278), (0.5, 0.5), (0.59754515, 0.0096074045), (0.59754515, 0.0096074045), (0.5, 0.5), (0.5, 0), (0.5, 0), (0.5, 0.5), (0.40245485, 0.0096074045), (0.40245485, 0.0096074045), (0.5, 0.5), (0.3086583, 0.038060278), (0.3086583, 0.038060278), (0.5, 0.5), (0.22221488, 0.0842652), (0.22221488, 0.0842652), (0.5, 0.5), (0.14644659, 0.14644662), (0.14644659, 0.14644662), (0.5, 0.5), (0.08426523, 0.22221488), (0.08426523, 0.22221488), (0.5, 0.5), (0.038060308, 0.3086583), (0.038060308, 0.3086583), (0.5, 0.5), (0.009607434, 0.40245482), (0.009607434, 0.40245482), (0.5, 0.5), (0, 0.5), (0, 0.5), (0.5, 0.5), (0.009607434, 0.59754515), (0.009607434, 0.59754515), (0.5, 0.5), (0.038060308, 0.6913417), (0.038060308, 0.6913417), (0.5, 0.5), (0.08426523, 0.7777851), (0.08426523, 0.7777851), (0.5, 0.5), (0.14644659, 0.8535534), (0.14644659, 0.8535534), (0.5, 0.5), (0.22221488, 0.91573477), (0.22221488, 0.91573477), (0.5, 0.5), (0.3086583, 0.9619397), (0.3086583, 0.9619397), (0.5, 0.5), (0.40245485, 0.99039257), (0.40245485, 0.99039257), (0.5, 0.5), (0.5, 1), (0.5, 1), (0.5, 0.5), (0.59754515, 0.99039257), (0.59754515, 0.99039257), (0.5, 0.5), (0.6913417, 0.9619397), (0.6913417, 0.9619397), (0.5, 0.5), (0.7777851, 0.91573477), (0.7777851, 0.91573477), (0.5, 0.5), (0.8535534, 0.8535534), (0.8535534, 0.8535534), (0.5, 0.5), (0.91573477, 0.7777851), (0.91573477, 0.7777851), (0.5, 0.5), (0.9619397, 0.6913417), (0.9619397, 0.6913417), (0.5, 0.5), (0.99039257, 0.59754515), (0.99039257, 0.59754515), (0.5, 0.5), (1, 0.5)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            double3 xformOp:rotateXYZ = (0, 0, 0)
            double3 xformOp:scale = (1, 500, 1)
            double3 xformOp:translate = (8033.251398196226, -38864.505877885174, -19284.506534750733)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def Mesh "Cylinder_02" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 32, 33, 1, 1, 33, 34, 2, 2, 34, 35, 3, 3, 35, 36, 4, 4, 36, 37, 5, 5, 37, 38, 6, 6, 38, 39, 7, 7, 39, 40, 8, 8, 40, 41, 9, 9, 41, 42, 10, 10, 42, 43, 11, 11, 43, 44, 12, 12, 44, 45, 13, 13, 45, 46, 14, 14, 46, 47, 15, 15, 47, 48, 16, 16, 48, 49, 17, 17, 49, 50, 18, 18, 50, 51, 19, 19, 51, 52, 20, 20, 52, 53, 21, 21, 53, 54, 22, 22, 54, 55, 23, 23, 55, 56, 24, 24, 56, 57, 25, 25, 57, 58, 26, 26, 58, 59, 27, 27, 59, 60, 28, 28, 60, 61, 29, 29, 61, 62, 30, 30, 62, 63, 31, 31, 63, 32, 0, 0, 1, 64, 1, 2, 64, 2, 3, 64, 3, 4, 64, 4, 5, 64, 5, 6, 64, 6, 7, 64, 7, 8, 64, 8, 9, 64, 9, 10, 64, 10, 11, 64, 11, 12, 64, 12, 13, 64, 13, 14, 64, 14, 15, 64, 15, 16, 64, 16, 17, 64, 17, 18, 64, 18, 19, 64, 19, 20, 64, 20, 21, 64, 21, 22, 64, 22, 23, 64, 23, 24, 64, 24, 25, 64, 25, 26, 64, 26, 27, 64, 27, 28, 64, 28, 29, 64, 29, 30, 64, 30, 31, 64, 31, 0, 64, 32, 65, 33, 33, 65, 34, 34, 65, 35, 35, 65, 36, 36, 65, 37, 37, 65, 38, 38, 65, 39, 39, 65, 40, 40, 65, 41, 41, 65, 42, 42, 65, 43, 43, 65, 44, 44, 65, 45, 45, 65, 46, 46, 65, 47, 47, 65, 48, 48, 65, 49, 49, 65, 50, 50, 65, 51, 51, 65, 52, 52, 65, 53, 53, 65, 54, 54, 65, 55, 55, 65, 56, 56, 65, 57, 57, 65, 58, 58, 65, 59, 59, 65, 60, 60, 65, 61, 61, 65, 62, 62, 65, 63, 63, 65, 32]
            rel material:binding = </World/BasisCurvesMarker/Looks/BasisCurvesMarker> (
                bindMaterialAs = "weakerThanDescendants"
            )
            normal3f[] normals = [(50, 0, 0), (50, 0, 0), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (50, 0, 0), (50, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(50, -50, 0), (49.03926, -50, 9.754517), (46.193974, -50, 19.13417), (41.57348, -50, 27.778513), (35.35534, -50, 35.35534), (27.778513, -50, 41.57348), (19.13417, -50, 46.193974), (9.754517, -50, 49.03926), (3.061617e-15, -50, 50), (-9.754517, -50, 49.03926), (-19.13417, -50, 46.193974), (-27.778513, -50, 41.57348), (-35.35534, -50, 35.35534), (-41.57348, -50, 27.778513), (-46.193974, -50, 19.13417), (-49.03926, -50, 9.754517), (-50, -50, 6.123234e-15), (-49.03926, -50, -9.754517), (-46.193974, -50, -19.13417), (-41.57348, -50, -27.778513), (-35.35534, -50, -35.35534), (-27.778513, -50, -41.57348), (-19.13417, -50, -46.193974), (-9.754517, -50, -49.03926), (-9.184851e-15, -50, -50), (9.754517, -50, -49.03926), (19.13417, -50, -46.193974), (27.778513, -50, -41.57348), (35.35534, -50, -35.35534), (41.57348, -50, -27.778513), (46.193974, -50, -19.13417), (49.03926, -50, -9.754517), (50, 50, 0), (49.03926, 50, 9.754517), (46.193974, 50, 19.13417), (41.57348, 50, 27.778513), (35.35534, 50, 35.35534), (27.778513, 50, 41.57348), (19.13417, 50, 46.193974), (9.754517, 50, 49.03926), (3.061617e-15, 50, 50), (-9.754517, 50, 49.03926), (-19.13417, 50, 46.193974), (-27.778513, 50, 41.57348), (-35.35534, 50, 35.35534), (-41.57348, 50, 27.778513), (-46.193974, 50, 19.13417), (-49.03926, 50, 9.754517), (-50, 50, 6.123234e-15), (-49.03926, 50, -9.754517), (-46.193974, 50, -19.13417), (-41.57348, 50, -27.778513), (-35.35534, 50, -35.35534), (-27.778513, 50, -41.57348), (-19.13417, 50, -46.193974), (-9.754517, 50, -49.03926), (-9.184851e-15, 50, -50), (9.754517, 50, -49.03926), (19.13417, 50, -46.193974), (27.778513, 50, -41.57348), (35.35534, 50, -35.35534), (41.57348, 50, -27.778513), (46.193974, 50, -19.13417), (49.03926, 50, -9.754517), (0, -50, 0), (0, 50, 0)]
            texCoord2f[] primvars:st = [(1, 0), (1, 1), (0.96875, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (0.9375, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.90625, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.875, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.84375, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.8125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.78125, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.75, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.71875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.6875, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.65625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.625, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.59375, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.5625, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.53125, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.46875, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.4375, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.40625, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.34375, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.3125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.28125, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.25, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.21875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.1875, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.15625, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.125, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.09375, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.0625, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.03125, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0, 1), (0, 0), (1, 0.5), (0.99039257, 0.59754515), (0.5, 0.5), (0.99039257, 0.59754515), (0.9619397, 0.6913417), (0.5, 0.5), (0.9619397, 0.6913417), (0.91573477, 0.7777851), (0.5, 0.5), (0.91573477, 0.7777851), (0.8535534, 0.8535534), (0.5, 0.5), (0.8535534, 0.8535534), (0.7777851, 0.91573477), (0.5, 0.5), (0.7777851, 0.91573477), (0.6913417, 0.9619397), (0.5, 0.5), (0.6913417, 0.9619397), (0.59754515, 0.99039257), (0.5, 0.5), (0.59754515, 0.99039257), (0.5, 1), (0.5, 0.5), (0.5, 1), (0.40245485, 0.99039257), (0.5, 0.5), (0.40245485, 0.99039257), (0.3086583, 0.9619397), (0.5, 0.5), (0.3086583, 0.9619397), (0.22221488, 0.91573477), (0.5, 0.5), (0.22221488, 0.91573477), (0.14644659, 0.8535534), (0.5, 0.5), (0.14644659, 0.8535534), (0.08426523, 0.7777851), (0.5, 0.5), (0.08426523, 0.7777851), (0.038060308, 0.6913417), (0.5, 0.5), (0.038060308, 0.6913417), (0.009607434, 0.59754515), (0.5, 0.5), (0.009607434, 0.59754515), (0, 0.5), (0.5, 0.5), (0, 0.5), (0.009607434, 0.40245485), (0.5, 0.5), (0.009607434, 0.40245485), (0.038060308, 0.3086583), (0.5, 0.5), (0.038060308, 0.3086583), (0.08426523, 0.22221488), (0.5, 0.5), (0.08426523, 0.22221488), (0.14644659, 0.14644659), (0.5, 0.5), (0.14644659, 0.14644659), (0.22221488, 0.08426523), (0.5, 0.5), (0.22221488, 0.08426523), (0.3086583, 0.038060308), (0.5, 0.5), (0.3086583, 0.038060308), (0.40245485, 0.009607434), (0.5, 0.5), (0.40245485, 0.009607434), (0.5, 0), (0.5, 0.5), (0.5, 0), (0.59754515, 0.009607434), (0.5, 0.5), (0.59754515, 0.009607434), (0.6913417, 0.038060308), (0.5, 0.5), (0.6913417, 0.038060308), (0.7777851, 0.08426523), (0.5, 0.5), (0.7777851, 0.08426523), (0.8535534, 0.14644659), (0.5, 0.5), (0.8535534, 0.14644659), (0.91573477, 0.22221488), (0.5, 0.5), (0.91573477, 0.22221488), (0.9619397, 0.3086583), (0.5, 0.5), (0.9619397, 0.3086583), (0.99039257, 0.40245485), (0.5, 0.5), (0.99039257, 0.40245485), (1, 0.5), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0.99039257, 0.40245482), (0.99039257, 0.40245482), (0.5, 0.5), (0.9619397, 0.3086583), (0.9619397, 0.3086583), (0.5, 0.5), (0.91573477, 0.22221488), (0.91573477, 0.22221488), (0.5, 0.5), (0.8535534, 0.14644662), (0.8535534, 0.14644662), (0.5, 0.5), (0.7777851, 0.0842652), (0.7777851, 0.0842652), (0.5, 0.5), (0.6913417, 0.038060278), (0.6913417, 0.038060278), (0.5, 0.5), (0.59754515, 0.0096074045), (0.59754515, 0.0096074045), (0.5, 0.5), (0.5, 0), (0.5, 0), (0.5, 0.5), (0.40245485, 0.0096074045), (0.40245485, 0.0096074045), (0.5, 0.5), (0.3086583, 0.038060278), (0.3086583, 0.038060278), (0.5, 0.5), (0.22221488, 0.0842652), (0.22221488, 0.0842652), (0.5, 0.5), (0.14644659, 0.14644662), (0.14644659, 0.14644662), (0.5, 0.5), (0.08426523, 0.22221488), (0.08426523, 0.22221488), (0.5, 0.5), (0.038060308, 0.3086583), (0.038060308, 0.3086583), (0.5, 0.5), (0.009607434, 0.40245482), (0.009607434, 0.40245482), (0.5, 0.5), (0, 0.5), (0, 0.5), (0.5, 0.5), (0.009607434, 0.59754515), (0.009607434, 0.59754515), (0.5, 0.5), (0.038060308, 0.6913417), (0.038060308, 0.6913417), (0.5, 0.5), (0.08426523, 0.7777851), (0.08426523, 0.7777851), (0.5, 0.5), (0.14644659, 0.8535534), (0.14644659, 0.8535534), (0.5, 0.5), (0.22221488, 0.91573477), (0.22221488, 0.91573477), (0.5, 0.5), (0.3086583, 0.9619397), (0.3086583, 0.9619397), (0.5, 0.5), (0.40245485, 0.99039257), (0.40245485, 0.99039257), (0.5, 0.5), (0.5, 1), (0.5, 1), (0.5, 0.5), (0.59754515, 0.99039257), (0.59754515, 0.99039257), (0.5, 0.5), (0.6913417, 0.9619397), (0.6913417, 0.9619397), (0.5, 0.5), (0.7777851, 0.91573477), (0.7777851, 0.91573477), (0.5, 0.5), (0.8535534, 0.8535534), (0.8535534, 0.8535534), (0.5, 0.5), (0.91573477, 0.7777851), (0.91573477, 0.7777851), (0.5, 0.5), (0.9619397, 0.6913417), (0.9619397, 0.6913417), (0.5, 0.5), (0.99039257, 0.59754515), (0.99039257, 0.59754515), (0.5, 0.5), (1, 0.5)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            double3 xformOp:rotateXYZ = (0, 0, 0)
            double3 xformOp:scale = (1, 500, 1)
            double3 xformOp:translate = (-2.7284841053187847e-12, -38864.505877885174, -30009.47303948472)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def Mesh "Cylinder_03" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 32, 33, 1, 1, 33, 34, 2, 2, 34, 35, 3, 3, 35, 36, 4, 4, 36, 37, 5, 5, 37, 38, 6, 6, 38, 39, 7, 7, 39, 40, 8, 8, 40, 41, 9, 9, 41, 42, 10, 10, 42, 43, 11, 11, 43, 44, 12, 12, 44, 45, 13, 13, 45, 46, 14, 14, 46, 47, 15, 15, 47, 48, 16, 16, 48, 49, 17, 17, 49, 50, 18, 18, 50, 51, 19, 19, 51, 52, 20, 20, 52, 53, 21, 21, 53, 54, 22, 22, 54, 55, 23, 23, 55, 56, 24, 24, 56, 57, 25, 25, 57, 58, 26, 26, 58, 59, 27, 27, 59, 60, 28, 28, 60, 61, 29, 29, 61, 62, 30, 30, 62, 63, 31, 31, 63, 32, 0, 0, 1, 64, 1, 2, 64, 2, 3, 64, 3, 4, 64, 4, 5, 64, 5, 6, 64, 6, 7, 64, 7, 8, 64, 8, 9, 64, 9, 10, 64, 10, 11, 64, 11, 12, 64, 12, 13, 64, 13, 14, 64, 14, 15, 64, 15, 16, 64, 16, 17, 64, 17, 18, 64, 18, 19, 64, 19, 20, 64, 20, 21, 64, 21, 22, 64, 22, 23, 64, 23, 24, 64, 24, 25, 64, 25, 26, 64, 26, 27, 64, 27, 28, 64, 28, 29, 64, 29, 30, 64, 30, 31, 64, 31, 0, 64, 32, 65, 33, 33, 65, 34, 34, 65, 35, 35, 65, 36, 36, 65, 37, 37, 65, 38, 38, 65, 39, 39, 65, 40, 40, 65, 41, 41, 65, 42, 42, 65, 43, 43, 65, 44, 44, 65, 45, 45, 65, 46, 46, 65, 47, 47, 65, 48, 48, 65, 49, 49, 65, 50, 50, 65, 51, 51, 65, 52, 52, 65, 53, 53, 65, 54, 54, 65, 55, 55, 65, 56, 56, 65, 57, 57, 65, 58, 58, 65, 59, 59, 65, 60, 60, 65, 61, 61, 65, 62, 62, 65, 63, 63, 65, 32]
            rel material:binding = </World/BasisCurvesMarker/Looks/BasisCurvesMarker> (
                bindMaterialAs = "weakerThanDescendants"
            )
            normal3f[] normals = [(50, 0, 0), (50, 0, 0), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (49.03926, 0, 9.754517), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (46.193974, 0, 19.13417), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (41.57348, 0, 27.778513), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (27.778513, 0, 41.57348), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (19.13417, 0, 46.193974), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (9.754517, 0, 49.03926), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (3.061617e-15, 0, 50), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-9.754517, 0, 49.03926), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-19.13417, 0, 46.193974), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-27.778513, 0, 41.57348), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-41.57348, 0, 27.778513), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-46.193974, 0, 19.13417), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-49.03926, 0, 9.754517), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-50, 0, 6.123234e-15), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-49.03926, 0, -9.754517), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-46.193974, 0, -19.13417), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-41.57348, 0, -27.778513), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-27.778513, 0, -41.57348), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-19.13417, 0, -46.193974), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.754517, 0, -49.03926), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (9.754517, 0, -49.03926), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (19.13417, 0, -46.193974), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (27.778513, 0, -41.57348), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (41.57348, 0, -27.778513), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (46.193974, 0, -19.13417), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (49.03926, 0, -9.754517), (50, 0, 0), (50, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(50, -50, 0), (49.03926, -50, 9.754517), (46.193974, -50, 19.13417), (41.57348, -50, 27.778513), (35.35534, -50, 35.35534), (27.778513, -50, 41.57348), (19.13417, -50, 46.193974), (9.754517, -50, 49.03926), (3.061617e-15, -50, 50), (-9.754517, -50, 49.03926), (-19.13417, -50, 46.193974), (-27.778513, -50, 41.57348), (-35.35534, -50, 35.35534), (-41.57348, -50, 27.778513), (-46.193974, -50, 19.13417), (-49.03926, -50, 9.754517), (-50, -50, 6.123234e-15), (-49.03926, -50, -9.754517), (-46.193974, -50, -19.13417), (-41.57348, -50, -27.778513), (-35.35534, -50, -35.35534), (-27.778513, -50, -41.57348), (-19.13417, -50, -46.193974), (-9.754517, -50, -49.03926), (-9.184851e-15, -50, -50), (9.754517, -50, -49.03926), (19.13417, -50, -46.193974), (27.778513, -50, -41.57348), (35.35534, -50, -35.35534), (41.57348, -50, -27.778513), (46.193974, -50, -19.13417), (49.03926, -50, -9.754517), (50, 50, 0), (49.03926, 50, 9.754517), (46.193974, 50, 19.13417), (41.57348, 50, 27.778513), (35.35534, 50, 35.35534), (27.778513, 50, 41.57348), (19.13417, 50, 46.193974), (9.754517, 50, 49.03926), (3.061617e-15, 50, 50), (-9.754517, 50, 49.03926), (-19.13417, 50, 46.193974), (-27.778513, 50, 41.57348), (-35.35534, 50, 35.35534), (-41.57348, 50, 27.778513), (-46.193974, 50, 19.13417), (-49.03926, 50, 9.754517), (-50, 50, 6.123234e-15), (-49.03926, 50, -9.754517), (-46.193974, 50, -19.13417), (-41.57348, 50, -27.778513), (-35.35534, 50, -35.35534), (-27.778513, 50, -41.57348), (-19.13417, 50, -46.193974), (-9.754517, 50, -49.03926), (-9.184851e-15, 50, -50), (9.754517, 50, -49.03926), (19.13417, 50, -46.193974), (27.778513, 50, -41.57348), (35.35534, 50, -35.35534), (41.57348, 50, -27.778513), (46.193974, 50, -19.13417), (49.03926, 50, -9.754517), (0, -50, 0), (0, 50, 0)]
            texCoord2f[] primvars:st = [(1, 0), (1, 1), (0.96875, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (0.9375, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.90625, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.875, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.84375, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.8125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.78125, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.75, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.71875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.6875, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.65625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.625, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.59375, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.5625, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.53125, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.46875, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.4375, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.40625, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.34375, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.3125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.28125, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.25, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.21875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.1875, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.15625, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.125, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.09375, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.0625, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.03125, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0, 1), (0, 0), (1, 0.5), (0.99039257, 0.59754515), (0.5, 0.5), (0.99039257, 0.59754515), (0.9619397, 0.6913417), (0.5, 0.5), (0.9619397, 0.6913417), (0.91573477, 0.7777851), (0.5, 0.5), (0.91573477, 0.7777851), (0.8535534, 0.8535534), (0.5, 0.5), (0.8535534, 0.8535534), (0.7777851, 0.91573477), (0.5, 0.5), (0.7777851, 0.91573477), (0.6913417, 0.9619397), (0.5, 0.5), (0.6913417, 0.9619397), (0.59754515, 0.99039257), (0.5, 0.5), (0.59754515, 0.99039257), (0.5, 1), (0.5, 0.5), (0.5, 1), (0.40245485, 0.99039257), (0.5, 0.5), (0.40245485, 0.99039257), (0.3086583, 0.9619397), (0.5, 0.5), (0.3086583, 0.9619397), (0.22221488, 0.91573477), (0.5, 0.5), (0.22221488, 0.91573477), (0.14644659, 0.8535534), (0.5, 0.5), (0.14644659, 0.8535534), (0.08426523, 0.7777851), (0.5, 0.5), (0.08426523, 0.7777851), (0.038060308, 0.6913417), (0.5, 0.5), (0.038060308, 0.6913417), (0.009607434, 0.59754515), (0.5, 0.5), (0.009607434, 0.59754515), (0, 0.5), (0.5, 0.5), (0, 0.5), (0.009607434, 0.40245485), (0.5, 0.5), (0.009607434, 0.40245485), (0.038060308, 0.3086583), (0.5, 0.5), (0.038060308, 0.3086583), (0.08426523, 0.22221488), (0.5, 0.5), (0.08426523, 0.22221488), (0.14644659, 0.14644659), (0.5, 0.5), (0.14644659, 0.14644659), (0.22221488, 0.08426523), (0.5, 0.5), (0.22221488, 0.08426523), (0.3086583, 0.038060308), (0.5, 0.5), (0.3086583, 0.038060308), (0.40245485, 0.009607434), (0.5, 0.5), (0.40245485, 0.009607434), (0.5, 0), (0.5, 0.5), (0.5, 0), (0.59754515, 0.009607434), (0.5, 0.5), (0.59754515, 0.009607434), (0.6913417, 0.038060308), (0.5, 0.5), (0.6913417, 0.038060308), (0.7777851, 0.08426523), (0.5, 0.5), (0.7777851, 0.08426523), (0.8535534, 0.14644659), (0.5, 0.5), (0.8535534, 0.14644659), (0.91573477, 0.22221488), (0.5, 0.5), (0.91573477, 0.22221488), (0.9619397, 0.3086583), (0.5, 0.5), (0.9619397, 0.3086583), (0.99039257, 0.40245485), (0.5, 0.5), (0.99039257, 0.40245485), (1, 0.5), (0.5, 0.5), (1, 0.5), (0.5, 0.5), (0.99039257, 0.40245482), (0.99039257, 0.40245482), (0.5, 0.5), (0.9619397, 0.3086583), (0.9619397, 0.3086583), (0.5, 0.5), (0.91573477, 0.22221488), (0.91573477, 0.22221488), (0.5, 0.5), (0.8535534, 0.14644662), (0.8535534, 0.14644662), (0.5, 0.5), (0.7777851, 0.0842652), (0.7777851, 0.0842652), (0.5, 0.5), (0.6913417, 0.038060278), (0.6913417, 0.038060278), (0.5, 0.5), (0.59754515, 0.0096074045), (0.59754515, 0.0096074045), (0.5, 0.5), (0.5, 0), (0.5, 0), (0.5, 0.5), (0.40245485, 0.0096074045), (0.40245485, 0.0096074045), (0.5, 0.5), (0.3086583, 0.038060278), (0.3086583, 0.038060278), (0.5, 0.5), (0.22221488, 0.0842652), (0.22221488, 0.0842652), (0.5, 0.5), (0.14644659, 0.14644662), (0.14644659, 0.14644662), (0.5, 0.5), (0.08426523, 0.22221488), (0.08426523, 0.22221488), (0.5, 0.5), (0.038060308, 0.3086583), (0.038060308, 0.3086583), (0.5, 0.5), (0.009607434, 0.40245482), (0.009607434, 0.40245482), (0.5, 0.5), (0, 0.5), (0, 0.5), (0.5, 0.5), (0.009607434, 0.59754515), (0.009607434, 0.59754515), (0.5, 0.5), (0.038060308, 0.6913417), (0.038060308, 0.6913417), (0.5, 0.5), (0.08426523, 0.7777851), (0.08426523, 0.7777851), (0.5, 0.5), (0.14644659, 0.8535534), (0.14644659, 0.8535534), (0.5, 0.5), (0.22221488, 0.91573477), (0.22221488, 0.91573477), (0.5, 0.5), (0.3086583, 0.9619397), (0.3086583, 0.9619397), (0.5, 0.5), (0.40245485, 0.99039257), (0.40245485, 0.99039257), (0.5, 0.5), (0.5, 1), (0.5, 1), (0.5, 0.5), (0.59754515, 0.99039257), (0.59754515, 0.99039257), (0.5, 0.5), (0.6913417, 0.9619397), (0.6913417, 0.9619397), (0.5, 0.5), (0.7777851, 0.91573477), (0.7777851, 0.91573477), (0.5, 0.5), (0.8535534, 0.8535534), (0.8535534, 0.8535534), (0.5, 0.5), (0.91573477, 0.7777851), (0.91573477, 0.7777851), (0.5, 0.5), (0.9619397, 0.6913417), (0.9619397, 0.6913417), (0.5, 0.5), (0.99039257, 0.59754515), (0.99039257, 0.59754515), (0.5, 0.5), (1, 0.5)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            double3 xformOp:rotateXYZ = (0, 0, 0)
            double3 xformOp:scale = (1, 500, 1)
            double3 xformOp:translate = (8033.251398196226, -38864.505877885174, -30009.47303948472)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }
    }
}

def Xform "Environment"
{
    double3 xformOp:rotateXYZ = (0, 0, 0)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

    def DistantLight "defaultLight" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        float inputs:angle = 1
        float inputs:intensity = 3000
        float inputs:shaping:cone:angle = 180
        float inputs:shaping:cone:softness
        float inputs:shaping:focus
        color3f inputs:shaping:focusTint
        asset inputs:shaping:ies:file
        double3 xformOp:rotateXYZ = (315, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }
}

def CesiumDataPrim "Cesium"
{
}

def CesiumGeoreferencePrim "CesiumGeoreference"
{
}

def "CesiumServers"
{
    def CesiumIonServerPrim "IonOfficial"
    {
        string cesium:projectDefaultIonAccessToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJjZGViMjAyNS1kNWY5LTRlM2QtODhkZC05MDY4NWY2ZWY0NDQiLCJpZCI6MTM5OTgwLCJpYXQiOjE2ODQ1MTk4MzF9.i0FVwDnL-9RxnWmiaT6q5RBBJ0UtykFkEi8UC3RGqCM"
        string cesium:projectDefaultIonAccessTokenId = "cdeb2025-d5f9-4e3d-88dd-90685f6ef444"
    }
}

def CesiumTilesetPrim "Cesium_World_Terrain"
{
    prepend rel cesium:georeferenceBinding = </CesiumGeoreference>
    string cesium:ionAccessToken = ""
    int64 cesium:ionAssetId = 1
    uniform token cesium:sourceType = "ion"
    float3[] extent = [(-638713700, -1273740900, -640816300), (638713700, -590464, 636611140)]

    def CesiumIonImageryPrim "Bing_Maps_Aerial_with_Labels_imagery"
    {
        string cesium:ionAccessToken = ""
        int64 cesium:ionAssetId = 3
    }

    def CesiumPolygonImageryPrim "Test_Polygon_Raster_Overlay"
    {
        rel cesium:cartographicPolygonBinding = </World/CartographicPolygonPrim>
    }
}

