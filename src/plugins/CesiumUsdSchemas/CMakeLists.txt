include(Macros)

set(SOURCES
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/data.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/globeAnchorAPI.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/georeference.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/ionServer.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/imagery.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/ionImagery.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/polygonImagery.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/session.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/tileset.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/tokens.cpp")

set(PY_BINDING_SOURCES
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/module.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/moduleDeps.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapData.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapGlobeAnchorAPI.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapGeoreference.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapIonServer.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapImagery.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapIonImagery.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapPolygonImagery.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapSession.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapTileset.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/CesiumUsdSchemas/wrapTokens.cpp")

set(CESIUM_USD_SCHEMAS_CXX_FLAGS ${CESIUM_OMNI_CXX_FLAGS})

if(MSVC)
    # Disable whole program optimization and unreferenced function removal
    # Without these flags USD plugins won't work in Release mode
    # Related issue: https://github.com/PixarAnimationStudios/USD/issues/1095
    #
    # Also disable all warnings as this is autogenerated code.
    set(CESIUM_USD_SCHEMAS_CXX_FLAGS
        ${CESIUM_USD_SCHEMAS_CXX_FLAGS}
        /GL-
        /Zc:inline-
        /w)
else()
    # Don't hide symbols. Even though USD doesn't export class definitions the
    # symbol for the class definition still needs to exist in the .dll/.so
    # otherwise Omniverse will fail to load the extension. This has a similar
    # effect as the /Zc:inline- flag above.
    #
    # Also disable all warnings as this is autogenerated code.
    set(CESIUM_USD_SCHEMAS_CXX_FLAGS ${CESIUM_USD_SCHEMAS_CXX_FLAGS} -fvisibility=default -w)
endif()

# cmake-format: off
setup_lib(
    TARGET_NAME
        CesiumUsdSchemas
    TYPE
        SHARED
    INCLUDE_DIRS
        "${CMAKE_CURRENT_LIST_DIR}/src"
    SOURCES
        ${SOURCES}
    LIBRARIES
        arch
        sdf
        tf
        usd
        usdGeom
        tbb
        boost_python310
        python310
    CXX_FLAGS
        ${CESIUM_USD_SCHEMAS_CXX_FLAGS}
    CXX_FLAGS_DEBUG
        ${CESIUM_OMNI_CXX_FLAGS_DEBUG}
    CXX_DEFINES
        ${CESIUM_OMNI_CXX_DEFINES}
        CESIUMUSDSCHEMAS_EXPORTS
    CXX_DEFINES_DEBUG
        ${CESIUM_OMNI_CXX_DEFINES_DEBUG}
)
# cmake-format: on

# cmake-format: off
setup_usd_python_lib(
    PYTHON_DIR
        # Use the same Python version as Omniverse (Python 3.10)
        "${PROJECT_SOURCE_DIR}/extern/nvidia/_build/target-deps/python"
    TARGET_NAME
        _CesiumUsdSchemas
    PACKAGE_NAME
        CesiumUsdSchemas
    PYTHON_MODULE_NAME
        CesiumUsdSchemas
    TYPE
        SHARED
    SOURCES
        ${PY_BINDING_SOURCES}
    LIBRARIES
        CesiumUsdSchemas
    CXX_FLAGS
        ${CESIUM_USD_SCHEMAS_CXX_FLAGS}
    CXX_FLAGS_DEBUG
        ${CESIUM_OMNI_CXX_FLAGS_DEBUG}
    CXX_DEFINES
        ${CESIUM_OMNI_CXX_DEFINES}
    CXX_DEFINES_DEBUG
        ${CESIUM_OMNI_CXX_DEFINES_DEBUG}
)
# cmake-format: on

add_custom_command(
    TARGET CesiumUsdSchemas
    POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy "${PROJECT_BINARY_DIR}/CesiumUsdSchemas.plugInfo.json.build"
            "$<TARGET_FILE_DIR:CesiumUsdSchemas>/plugins/CesiumUsdSchemas/resources/plugInfo.json"
    COMMAND ${CMAKE_COMMAND} -E copy "${PROJECT_BINARY_DIR}/CesiumUsdSchemas.generatedSchema.usda.build"
            "$<TARGET_FILE_DIR:CesiumUsdSchemas>/plugins/CesiumUsdSchemas/resources/generatedSchema.usda")
